{
   "default" : {
      "all" : {
         "contributing" : [
            {
               "key" : {
                  "id" : "contrib",
                  "image" : "pgbackrest/doc:contrib",
                  "name" : "pgbackrest-dev",
                  "option" : "-v /var/run/docker.sock:/var/run/docker.sock -v /home/vagrant/test:/home/vagrant/test",
                  "os" : "u18",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.8"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get update"
                  ],
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get install rsync git devscripts build-essential valgrind lcov autoconf \\",
                     "    autoconf-archive libssl-dev zlib1g-dev libxml2-dev libpq-dev pkg-config \\",
                     "    libxml-checker-perl libyaml-libyaml-perl libdbd-pg-perl liblz4-dev liblz4-tool \\",
                     "    zstd libzstd-dev bzip2 libbz2-dev"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "pgbackrest/test/test.pl --clean-only"
                  ],
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "curl -fsSL https://get.docker.com | sudo sh"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo usermod -aG docker `whoami`"
                  ],
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "pgbackrest/test/test.pl --vm=none --dry-run"
                  ],
                  "cmd-extra" : "--no-log-timestamp",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "[0-9]+ tests selected|DRY RUN COMPLETED SUCCESSFULLY"
                     ]
                  },
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: test begin - log level info",
                     "P00   INFO: check version info",
                     "P00   INFO: builds required: bin",
                     "P00   INFO: 69 tests selected",
                     "            ",
                     "P00   INFO: P1-T01/69 - vm=none, module=common, test=error",
                     "       [filtered 66 lines of output]",
                     "P00   INFO: P1-T68/69 - vm=none, module=performance, test=type",
                     "P00   INFO: P1-T69/69 - vm=none, module=performance, test=storage",
                     "P00   INFO: DRY RUN COMPLETED SUCCESSFULLY"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "pgbackrest/test/test.pl --vm=none --dev --vm-out --module=common --test=wait"
                  ],
                  "cmd-extra" : "--no-log-timestamp",
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: test begin - log level info",
                     "P00   INFO: check code autogenerate",
                     "P00   INFO: cleanup old data",
                     "P00   INFO: builds required: none",
                     "P00   INFO: 1 test selected",
                     "            ",
                     "P00   INFO: P1-T1/1 - vm=none, module=common, test=wait",
                     "            ",
                     "    run 001 - waitNew(), waitMore, and waitFree()",
                     "        l0018 -     expect AssertError: assertion 'waitTime <= 999999000' failed",
                     "        l0021 - 0ms wait",
                     "        l0025 -     new wait",
                     "        l0026 -         check remaining time",
                     "        l0027 -         check wait time",
                     "        l0028 -         check sleep time",
                     "        l0029 -         check sleep prev time",
                     "        l0030 -         no wait more",
                     "        l0033 -     new wait = 0.2 sec",
                     "        l0034 -         check remaining time",
                     "        l0035 -         check wait time",
                     "        l0036 -         check sleep time",
                     "        l0037 -         check sleep prev time",
                     "        l0038 -         check begin time",
                     "        l0044 -         lower range check",
                     "        l0045 -         upper range check",
                     "        l0047 -         free wait",
                     "        l0052 -     new wait = 1.1 sec",
                     "        l0053 -         check wait time",
                     "        l0054 -         check sleep time",
                     "        l0055 -         check sleep prev time",
                     "        l0056 -         check begin time",
                     "        l0062 -         lower range check",
                     "        l0063 -         upper range check",
                     "        l0065 -         free wait",
                     "    ",
                     "    TESTS COMPLETED SUCCESSFULLY",
                     "",
                     "P00   INFO: P1-T1/1 - vm=none, module=common, test=wait",
                     "P00   INFO: tested modules have full coverage",
                     "P00   INFO: writing C coverage report",
                     "P00   INFO: TESTS COMPLETED SUCCESSFULLY"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "pgbackrest/test/test.pl --vm=none --dev --module=postgres"
                  ],
                  "cmd-extra" : "--no-log-timestamp",
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: test begin - log level info",
                     "P00   INFO: check code autogenerate",
                     "P00   INFO: cleanup old data",
                     "P00   INFO: builds required: none",
                     "P00   INFO: 2 tests selected",
                     "            ",
                     "P00   INFO: P1-T1/2 - vm=none, module=postgres, test=client",
                     "P00   INFO: P1-T2/2 - vm=none, module=postgres, test=interface",
                     "P00   INFO: tested modules have full coverage",
                     "P00   INFO: writing C coverage report",
                     "P00   INFO: TESTS COMPLETED SUCCESSFULLY"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "pgbackrest/test/test.pl --vm-build --vm=u18"
                  ],
                  "cmd-extra" : "--no-log-timestamp",
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: test begin - log level info",
                     "P00   INFO: Using cached pgbackrest/test:u18-base-20200924A image (d95d53e642fc1cea4a2b8e935ea7d9739f7d1c46) ...",
                     "P00   INFO: Building pgbackrest/test:u18-test image ...",
                     "P00   INFO: Build Complete"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "pgbackrest/test/test.pl --vm=u18 --dev --module=mock --test=archive --run=2"
                  ],
                  "cmd-extra" : "--no-log-timestamp",
                  "host" : "pgbackrest-dev",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: test begin - log level info",
                     "P00   INFO: check code autogenerate",
                     "P00   INFO: cleanup old data and containers",
                     "P00   INFO: builds required: bin, bin host",
                     "P00   INFO:     bin dependencies have changed for u18, rebuilding...",
                     "P00   INFO:     build bin for u18 (/home/vagrant/test/bin/u18)",
                     "P00   INFO:     bin dependencies have changed for none, rebuilding...",
                     "P00   INFO:     build bin for none (/home/vagrant/test/bin/none)",
                     "P00   INFO: 1 test selected",
                     "            ",
                     "P00   INFO: P1-T1/1 - vm=u18, module=mock, test=archive, run=2",
                     "P00   INFO: no code modules had all tests run required for coverage",
                     "P00   INFO: TESTS COMPLETED SUCCESSFULLY"
                  ]
               }
            }
         ],
         "user-guide" : [
            {
               "key" : {
                  "id" : "azure",
                  "image" : "mcr.microsoft.com/azure-storage/azurite",
                  "name" : "azure-server",
                  "option" : "-v {[host-repo-path]}/doc/resource/fake-cert/azure-server.crt:/root/public.crt:ro -v {[host-repo-path]}/doc/resource/fake-cert/azure-server.key:/root/private.key:ro -e AZURITE_ACCOUNTS='pgbackrest:YXpLZXk='",
                  "os" : "debian",
                  "param" : "azurite-blob --blobPort 443 --blobHost 0.0.0.0 --cert=/root/public.crt --key=/root/private.key",
                  "update-hosts" : false
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.2"
               }
            },
            {
               "key" : {
                  "id" : "s3",
                  "image" : "minio/minio:RELEASE.2020-05-06T23-23-25Z",
                  "name" : "s3-server",
                  "option" : "-v {[host-repo-path]}/doc/resource/fake-cert/s3-server.crt:/root/.minio/certs/public.crt:ro -v {[host-repo-path]}/doc/resource/fake-cert/s3-server.key:/root/.minio/certs/private.key:ro -e MINIO_REGION=us-east-1 -e MINIO_DOMAIN=s3.us-east-1.amazonaws.com -e MINIO_BROWSER=off -e MINIO_ACCESS_KEY=accessKey1 -e MINIO_SECRET_KEY=verySecretKey1",
                  "os" : "debian",
                  "param" : "server /data --address :443",
                  "update-hosts" : false
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.3"
               }
            },
            {
               "key" : {
                  "id" : "build",
                  "image" : "pgbackrest/doc:debian",
                  "name" : "build",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "debian",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.4"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo cp -r /pgbackrest/src /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown -R vagrant /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get update"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get install make gcc libpq-dev libssl-dev libxml2-dev pkg-config \\",
                     "    liblz4-dev libzstd-dev libbz2-dev libz-dev"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "cd /build/pgbackrest-release-2.30/src && ./configure && make"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "pg1",
                  "image" : "pgbackrest/doc:debian",
                  "name" : "pg-primary",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "debian",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.5"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get install postgresql-client libxml2"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/log/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "pgBackRest 2.30 - General help",
                     "",
                     "Usage:",
                     "    pgbackrest [options] [command]",
                     "",
                     "Commands:",
                     "    archive-get     Get a WAL segment from the archive.",
                     "    archive-push    Push a WAL segment to the archive.",
                     "    backup          Backup a database cluster.",
                     "    check           Check the configuration.",
                     "    expire          Expire backups that exceed retention.",
                     "    help            Get help.",
                     "    info            Retrieve information about backups.",
                     "    restore         Restore a database cluster.",
                     "    stanza-create   Create the required stanza data.",
                     "    stanza-delete   Delete a stanza.",
                     "    stanza-upgrade  Upgrade a stanza.",
                     "    start           Allow pgBackRest processes to run.",
                     "    stop            Stop pgBackRest processes from running.",
                     "    version         Get version.",
                     "",
                     "Use 'pgbackrest help [command]' for more information."
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres /usr/lib/postgresql/12/bin/initdb \\",
                     "    -D /var/lib/postgresql/12/demo -k -A peer"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_createcluster 12 demo"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "Configuring already existing cluster (configuration: /etc/postgresql/12/demo, data: /var/lib/postgresql/12/demo, owner: 106:110)",
                     "Ver Cluster Port Status Owner    Data directory              Log file",
                     "12  demo    5432 down   postgres /var/lib/postgresql/12/demo /var/log/postgresql/postgresql-12-demo.log"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/postgresql/12/demo/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "listen_addresses" : {
                        "value" : "'*'"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/postgresql/12/demo/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "log_line_prefix" : {
                        "value" : "''"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'",
                     "log_line_prefix = ''"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/postgresql/12/demo"
                        }
                     },
                     "global" : {
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres bash -c ' \\",
                     "    export PGBACKREST_LOG_PATH=/path/set/by/env && \\",
                     "    pgbackrest --log-level-console=error help backup log-path'"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "current\\: \\/path\\/set\\/by\\/env"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "pgBackRest 2.30 - 'backup' command - 'log-path' option help",
                     "",
                     "Path where log files are stored.",
                     "",
                     "The log path provides a location for pgBackRest to store log files. Note that",
                     "if log-level-file=off then no log path is required.",
                     "",
                     "current: /path/set/by/env",
                     "default: /var/log/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 750 /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-path" : {
                           "value" : "/var/lib/pgbackrest"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/postgresql/12/demo/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "wal_level" : {
                        "value" : "replica"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "listen_addresses = '*'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = replica"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo restart"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global:archive-push" : {
                        "compress-level" : {
                           "value" : "3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-full" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-cipher-pass" : {
                           "value" : "zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO"
                        },
                        "repo1-cipher-type" : {
                           "value" : "aes-256-cbc"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        " successfully archived to "
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: WAL segment 000000010000000000000001 successfully archived to '/var/lib/pgbackrest/archive/demo/12-1/0000000100000000/000000010000000000000001-94df38a6c71b0ba12053726ae869356a4df6e3d2.gz'",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the next regular checkpoint completes",
                     "P00   INFO: backup start archive = 000000010000000000000002, lsn = 0/2000028",
                     "       [filtered 973 lines of output]",
                     "P01   INFO: backup file /var/lib/postgresql/12/demo/base/1/13201 (0B, 100%)",
                     "P01   INFO: backup file /var/lib/postgresql/12/demo/base/1/13196 (0B, 100%)",
                     "P00   INFO: full backup size = 23.4MB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000010000000000000002, lsn = 0/2000138",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-142231F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "diff backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 4 lines of output]",
                     "P01   INFO: backup file /var/lib/postgresql/12/demo/global/pg_control (8KB, 99%) checksum cec5a5adcdfe5dc47453928094dacdd6934cc91c",
                     "P01   INFO: backup file /var/lib/postgresql/12/demo/pg_logical/replorigin_checkpoint (8B, 100%) checksum 347fc8f2df71bd4436e38bd1516ccd7ea0d46532",
                     "P00   INFO: diff backup size = 8KB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000010000000000000004, lsn = 0/4000100",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "(full|incr|diff) backup"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: aes-256-cbc",
                     "",
                     "    db (current)",
                     "        wal archive min/max (12-1): 000000010000000000000001/000000010000000000000004",
                     "",
                     "        full backup: 20201005-142231F",
                     "            timestamp start/stop: 2020-10-05 14:22:31 / 2020-10-05 14:22:47",
                     "            wal start/stop: 000000010000000000000002 / 000000010000000000000002",
                     "            database size: 23.4MB, backup size: 23.4MB",
                     "            repository size: 2.8MB, repository backup size: 2.8MB",
                     "",
                     "        diff backup: 20201005-142231F_20201005-142249D",
                     "            timestamp start/stop: 2020-10-05 14:22:49 / 2020-10-05 14:22:51",
                     "            wal start/stop: 000000010000000000000004 / 000000010000000000000004",
                     "            database size: 23.4MB, backup size: 8.3KB",
                     "            repository size: 2.8MB, repository backup size: 496B",
                     "            backup reference list: 20201005-142231F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres rm /var/lib/postgresql/12/demo/global/pg_control"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "could not find the database system"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "Error: /usr/lib/postgresql/12/bin/pg_ctl /usr/lib/postgresql/12/bin/pg_ctl start -D /var/lib/postgresql/12/demo -l /var/log/postgresql/postgresql-12-demo.log -s -o  -c config_file=\"/etc/postgresql/12/demo/postgresql.conf\"  exited with status 1: ",
                     "postgres: could not find the database system",
                     "Expected to find it in the directory \"/var/lib/postgresql/12/demo\",",
                     "but could not open file \"/var/lib/postgresql/12/demo/global/pg_control\": No such file or directory",
                     "Examine the log output."
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres find /var/lib/postgresql/12/demo -mindepth 1 -delete"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup begins after the next regular checkpoint completes"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --type=incr",
                     "P00   INFO: last backup label = 20201005-142231F_20201005-142249D, version = 2.30",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the next regular checkpoint completes",
                     "P00   INFO: backup start archive = 000000020000000000000006, lsn = 0/6000028",
                     "P00   WARN: a timeline switch has occurred since the 20201005-142231F_20201005-142249D backup, enabling delta checksum",
                     "       [filtered 10 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "start-fast" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup begins after the requested immediate checkpoint completes"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --start-fast --type=incr",
                     "P00   INFO: last backup label = 20201005-142231F_20201005-142312I, version = 2.30",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000020000000000000007, lsn = 0/7000028",
                     "P01   INFO: backup file /var/lib/postgresql/12/demo/global/pg_control (8KB, 99%) checksum 33632560c26baa2ef3c887521ab0d73a0ae09f61",
                     "       [filtered 8 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -p /var/lib/postgresql/pgbackrest/doc/example"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cp -r /pgbackrest/doc/example/* \\",
                     "    /var/lib/postgresql/pgbackrest/doc/example"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat \\",
                     "    /var/lib/postgresql/pgbackrest/doc/example/pgsql-pgbackrest-info.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-- An example of monitoring pgBackRest from within PostgreSQL",
                     "--",
                     "-- Use copy to export data from the pgBackRest info command into the jsonb",
                     "-- type so it can be queried directly by PostgreSQL.",
                     "",
                     "-- Create monitor schema",
                     "create schema monitor;",
                     "",
                     "-- Get pgBackRest info in JSON format",
                     "create function monitor.pgbackrest_info()",
                     "    returns jsonb AS $$",
                     "declare",
                     "    data jsonb;",
                     "begin",
                     "    -- Create a temp table to hold the JSON data",
                     "    create temp table temp_pgbackrest_data (data jsonb);",
                     "",
                     "    -- Copy data into the table directly from the pgBackRest info command",
                     "    copy temp_pgbackrest_data (data)",
                     "        from program",
                     "            'pgbackrest --output=json info' (format text);",
                     "",
                     "    select temp_pgbackrest_data.data",
                     "      into data",
                     "      from temp_pgbackrest_data;",
                     "",
                     "    drop table temp_pgbackrest_data;",
                     "",
                     "    return data;",
                     "end $$ language plpgsql;"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -f \\",
                     "    /var/lib/postgresql/pgbackrest/doc/example/pgsql-pgbackrest-info.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat \\",
                     "    /var/lib/postgresql/pgbackrest/doc/example/pgsql-pgbackrest-query.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-- Get last successful backup for each stanza",
                     "--",
                     "-- Requires the monitor.pgbackrest_info function.",
                     "with stanza as",
                     "(",
                     "    select data->'name' as name,",
                     "           data->'backup'->(",
                     "               jsonb_array_length(data->'backup') - 1) as last_backup,",
                     "           data->'archive'->(",
                     "               jsonb_array_length(data->'archive') - 1) as current_archive",
                     "      from jsonb_array_elements(monitor.pgbackrest_info()) as data",
                     ")",
                     "select name,",
                     "       to_timestamp(",
                     "           (last_backup->'timestamp'->>'stop')::numeric) as last_successful_backup,",
                     "       current_archive->>'max' as last_archived_wal",
                     "  from stanza;"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -f \\",
                     "    /var/lib/postgresql/pgbackrest/doc/example/pgsql-pgbackrest-query.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "  name  | last_successful_backup |    last_archived_wal     ",
                     "--------+------------------------+--------------------------",
                     " \"demo\" | 2020-10-05 14:23:18+00 | 000000020000000000000007",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get install jq"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --output=json --stanza=demo info | \\",
                     "    jq '.[0] | .backup[-1] | .timestamp.stop'"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "1601907798"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --output=json --stanza=demo info | \\",
                     "    jq '.[0] | .archive[-1] | .max'"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "\"000000020000000000000007\""
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-full" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=full \\",
                     "    --log-level-console=detail backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "archive retention on backup 20201005-142231F|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 984 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=detail --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00 DETAIL: archive retention on backup 20201005-142231F, archiveId = 12-1, start = 000000010000000000000002",
                     "P00 DETAIL: remove archive: archiveId = 12-1, start = 000000010000000000000001, stop = 000000010000000000000001",
                     "P00   INFO: expire command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-142327F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=full \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "expire full backup set\\: 20201005-142231F|archive retention on backup 20201005-142327F|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 983 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00   INFO: expire full backup set: 20201005-142231F, 20201005-142231F_20201005-142249D, 20201005-142231F_20201005-142312I, 20201005-142231F_20201005-142316I",
                     "P00   INFO: remove expired backup 20201005-142231F_20201005-142316I",
                     "P00   INFO: remove expired backup 20201005-142231F_20201005-142312I",
                     "       [filtered 2 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-diff" : {
                           "value" : "1"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-diff=1",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-142345F_20201005-142407D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "expire diff backup set: 20201005-142345F_20201005-142407D"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 12 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-diff=1 --repo1-retention-full=2 --stanza=demo",
                     "P00   INFO: expire diff backup set: 20201005-142345F_20201005-142407D, 20201005-142345F_20201005-142410I",
                     "P00   INFO: remove expired backup 20201005-142345F_20201005-142410I",
                     "P00   INFO: remove expired backup 20201005-142345F_20201005-142407D"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-diff" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-142345F_20201005-142413D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select pg_create_restore_point('generate WAL'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('generate WAL'); select pg_switch_wal();\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "new backup label"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 9 lines of output]",
                     "P00   INFO: backup stop archive = 000000020000000000000011, lsn = 0/11000100",
                     "P00   INFO: check archive for segment(s) 000000020000000000000011:000000020000000000000011",
                     "P00   INFO: new backup label = 20201005-142345F_20201005-142418D",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-diff=2 --repo1-retention-full=2 --stanza=demo"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-142345F_20201005-142418D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=detail \\",
                     "    --repo1-retention-archive-type=diff --repo1-retention-archive=1 expire"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "archive retention on backup 20201005-142345F_20201005-142413D|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: expire command begin 2.30: --log-level-console=detail --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-archive=1 --repo1-retention-archive-type=diff --repo1-retention-diff=2 --repo1-retention-full=2 --stanza=demo",
                     "P00 DETAIL: archive retention on backup 20201005-142327F, archiveId = 12-1, start = 000000020000000000000009, stop = 000000020000000000000009",
                     "P00 DETAIL: archive retention on backup 20201005-142345F, archiveId = 12-1, start = 00000002000000000000000A, stop = 00000002000000000000000A",
                     "P00 DETAIL: archive retention on backup 20201005-142345F_20201005-142413D, archiveId = 12-1, start = 00000002000000000000000E, stop = 00000002000000000000000E",
                     "P00 DETAIL: archive retention on backup 20201005-142345F_20201005-142418D, archiveId = 12-1, start = 000000020000000000000011",
                     "P00 DETAIL: remove archive: archiveId = 12-1, start = 00000002000000000000000B, stop = 00000002000000000000000D",
                     "P00 DETAIL: remove archive: archiveId = 12-1, start = 00000002000000000000000F, stop = 000000020000000000000010",
                     "P00   INFO: expire command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --log-level-console=detail restore"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "demo\\/PG_VERSION - exists and matches backup|remove invalid files|rename global\\/pg_control"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 2 lines of output]",
                     "P00 DETAIL: check '/var/lib/postgresql/12/demo' exists",
                     "P00 DETAIL: remove 'global/pg_control' so cluster will not start if restore does not complete",
                     "P00   INFO: remove invalid files/links/paths from '/var/lib/postgresql/12/demo'",
                     "P00 DETAIL: remove invalid file '/var/lib/postgresql/12/demo/backup_label.old'",
                     "P00 DETAIL: remove invalid file '/var/lib/postgresql/12/demo/base/1/pg_internal.init'",
                     "       [filtered 815 lines of output]",
                     "P01 DETAIL: restore file /var/lib/postgresql/12/demo/base/13358/PG_VERSION - exists and matches backup (3B, 99%) checksum ad552e6dc057d1d825bf49df79d6b98eba846ebe",
                     "P01 DETAIL: restore file /var/lib/postgresql/12/demo/base/1/PG_VERSION - exists and matches backup (3B, 99%) checksum ad552e6dc057d1d825bf49df79d6b98eba846ebe",
                     "P01 DETAIL: restore file /var/lib/postgresql/12/demo/PG_VERSION - exists and matches backup (3B, 100%) checksum ad552e6dc057d1d825bf49df79d6b98eba846ebe",
                     "P01 DETAIL: restore file /var/lib/postgresql/12/demo/global/6100 - exists and is zero size (0B, 100%)",
                     "P01 DETAIL: restore file /var/lib/postgresql/12/demo/global/6000 - exists and is zero size (0B, 100%)",
                     "       [filtered 201 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create database test1;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create database test2;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create table test1_table (id int); \\",
                     "    insert into test1_table (id) values (1);\" test1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "INSERT 0 1"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create table test2_table (id int); \\",
                     "    insert into test2_table (id) values (2);\" test2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "INSERT 0 1"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -Atc \"select oid from pg_database where datname = 'test1'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres du -sh /var/lib/postgresql/12/demo/base/24576"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "7.8M\t/var/lib/postgresql/12/demo/base/24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-142345F_20201005-142431I"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --set=20201005-142345F_20201005-142431I info"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "database list"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 11 lines of output]",
                     "            repository size: 4.7MB, repository backup size: 1.9MB",
                     "            backup reference list: 20201005-142345F, 20201005-142345F_20201005-142418D",
                     "            database list: postgres (13359), test1 (24576), test2 (24577)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --db-include=test2 restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from test2_table;\" test2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     " id ",
                     "----",
                     "  2",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from test1_table;\" test1"
                  ],
                  "err-expect" : "2",
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "relation mapping file.*contains invalid data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "psql: error: could not connect to server: FATAL:  relation mapping file \"base/24576/pg_filenode.map\" contains invalid data"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres du -sh /var/lib/postgresql/12/demo/base/24576"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "176K\t/var/lib/postgresql/12/demo/base/24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"drop database test1;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "DROP DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select oid, datname from pg_database order by oid;\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "test2"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "  oid  |  datname  ",
                     "-------+-----------",
                     "     1 | template1",
                     " 13358 | template0",
                     " 13359 | postgres",
                     " 24577 | test2",
                     "(4 rows)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    create table important_table (message text); \\",
                     "    insert into important_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -Atc \"select current_timestamp\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "2020-10-05 14:25:05.993548+00"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    drop table important_table; \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: ...le important_table;     commit;     select * from important_...",
                     "                                                             ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --type=time \"--target=2020-10-05 14:25:05.993548+00\" \\",
                     "    --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/postgresql/12/demo/postgresql.auto.conf"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery_target_time"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 12 lines of output]",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:25:09",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "recovery_target_time = '2020-10-05 14:25:05.993548+00'",
                     "recovery_target_action = 'promote'"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery stopping before|last completed transaction|starting point-in-time recovery"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 3 lines of output]",
                     "LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"",
                     "LOG:  database system was interrupted; last known up at 2020-10-05 14:24:57 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 14:25:05.993548+00",
                     "LOG:  restored log file \"00000004.history\" from archive",
                     "LOG:  restored log file \"000000040000000000000016\" from archive",
                     "       [filtered 2 lines of output]",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  restored log file \"000000040000000000000017\" from archive",
                     "LOG:  recovery stopping before commit of transaction 495, time 2020-10-05 14:25:07.613445+00",
                     "LOG:  redo done at 0/17019DD8",
                     "LOG:  last completed transaction was at log time 2020-10-05 14:25:04.492513+00",
                     "LOG:  selected new timeline ID: 5",
                     "LOG:  archive recovery complete",
                     "       [filtered 2 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    drop table important_table; \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: ...le important_table;     commit;     select * from important_...",
                     "                                                             ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-142345F_20201005-142517I"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "20201005-142345F_20201005-142517I"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: aes-256-cbc",
                     "",
                     "    db (current)",
                     "        wal archive min/max (12-1): 000000020000000000000009/000000050000000000000018",
                     "",
                     "        full backup: 20201005-142327F",
                     "            timestamp start/stop: 2020-10-05 14:23:27 / 2020-10-05 14:23:44",
                     "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
                     "            database size: 23.4MB, backup size: 23.4MB",
                     "            repository size: 2.8MB, repository backup size: 2.8MB",
                     "",
                     "        full backup: 20201005-142345F",
                     "            timestamp start/stop: 2020-10-05 14:23:45 / 2020-10-05 14:24:04",
                     "            wal start/stop: 00000002000000000000000A / 00000002000000000000000A",
                     "            database size: 23.4MB, backup size: 23.4MB",
                     "            repository size: 2.8MB, repository backup size: 2.8MB",
                     "",
                     "        diff backup: 20201005-142345F_20201005-142418D",
                     "            timestamp start/stop: 2020-10-05 14:24:18 / 2020-10-05 14:24:20",
                     "            wal start/stop: 000000020000000000000011 / 000000020000000000000011",
                     "            database size: 23.4MB, backup size: 112.3KB",
                     "            repository size: 2.8MB, repository backup size: 13.3KB",
                     "            backup reference list: 20201005-142345F",
                     "",
                     "        incr backup: 20201005-142345F_20201005-142431I",
                     "            timestamp start/stop: 2020-10-05 14:24:31 / 2020-10-05 14:24:43",
                     "            wal start/stop: 000000030000000000000013 / 000000030000000000000013",
                     "            database size: 38.6MB, backup size: 15.7MB",
                     "            repository size: 4.7MB, repository backup size: 1.9MB",
                     "            backup reference list: 20201005-142345F, 20201005-142345F_20201005-142418D",
                     "",
                     "        diff backup: 20201005-142345F_20201005-142457D",
                     "            timestamp start/stop: 2020-10-05 14:24:57 / 2020-10-05 14:25:03",
                     "            wal start/stop: 000000040000000000000016 / 000000040000000000000016",
                     "            database size: 31MB, backup size: 8.2MB",
                     "            repository size: 3.8MB, repository backup size: 1007.8KB",
                     "            backup reference list: 20201005-142345F",
                     "",
                     "        incr backup: 20201005-142345F_20201005-142517I",
                     "            timestamp start/stop: 2020-10-05 14:25:17 / 2020-10-05 14:25:18",
                     "            wal start/stop: 000000050000000000000018 / 000000050000000000000018",
                     "            database size: 31MB, backup size: 2.2MB",
                     "            repository size: 3.8MB, repository backup size: 234.0KB",
                     "            backup reference list: 20201005-142345F, 20201005-142345F_20201005-142457D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --set=20201005-142345F_20201005-142517I \\",
                     "    --type=time \"--target=2020-10-05 14:25:05.993548+00\" --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: select * from important_table",
                     "                      ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "starting point-in-time recovery|consistent recovery state reached"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 3 lines of output]",
                     "LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"",
                     "LOG:  database system was interrupted; last known up at 2020-10-05 14:25:17 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 14:25:05.993548+00",
                     "LOG:  restored log file \"00000005.history\" from archive",
                     "LOG:  restored log file \"000000050000000000000018\" from archive",
                     "LOG:  redo starts at 0/18000028",
                     "LOG:  consistent recovery state reached at 0/18000100",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  redo done at 0/18000100",
                     "       [filtered 7 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --type=time \"--target=2020-10-05 14:25:05.993548+00\" \\",
                     "    --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery stopping before|last completed transaction|starting point-in-time recovery"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 5 lines of output]",
                     "LOG:  restored log file \"00000005.history\" from archive",
                     "LOG:  restored log file \"00000006.history\" from archive",
                     "LOG:  starting point-in-time recovery to 2020-10-05 14:25:05.993548+00",
                     "LOG:  restored log file \"00000006.history\" from archive",
                     "LOG:  restored log file \"000000040000000000000016\" from archive",
                     "       [filtered 4 lines of output]",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  restored log file \"000000050000000000000017\" from archive",
                     "LOG:  recovery stopping before commit of transaction 496, time 2020-10-05 14:25:16.499473+00",
                     "LOG:  redo done at 0/17022408",
                     "LOG:  last completed transaction was at log time 2020-10-05 14:25:04.492513+00",
                     "LOG:  selected new timeline ID: 7",
                     "LOG:  archive recovery complete",
                     "       [filtered 2 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "4"
                        },
                        "repo1-azure-account" : {
                           "value" : "pgbackrest"
                        },
                        "repo1-azure-container" : {
                           "value" : "demo-container"
                        },
                        "repo1-azure-host" : {
                           "value" : "blob.core.windows.net"
                        },
                        "repo1-azure-key" : {
                           "value" : "YXpLZXk="
                        },
                        "repo1-path" : {
                           "value" : "/demo-repo"
                        },
                        "repo1-type" : {
                           "value" : "azure"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "process-max=4",
                     "repo1-azure-account=pgbackrest",
                     "repo1-azure-container=demo-container",
                     "repo1-azure-key=YXpLZXk=",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/demo-repo",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "repo1-type=azure",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "echo \"172.17.0.2 blob.core.windows.net\" | tee -a /etc/hosts"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-create"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-azure-account=<redacted> --repo1-azure-container=demo-container --repo1-azure-host=blob.core.windows.net --repo1-azure-key=<redacted> --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-type=azure --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --process-max=4 --repo1-azure-account=<redacted> --repo1-azure-container=demo-container --repo1-azure-host=blob.core.windows.net --repo1-azure-key=<redacted> --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-type=azure --stanza=demo --start-fast",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000070000000000000018, lsn = 0/18000028",
                     "       [filtered 1279 lines of output]",
                     "P03   INFO: backup file /var/lib/postgresql/12/demo/base/1/13201 (0B, 100%)",
                     "P04   INFO: backup file /var/lib/postgresql/12/demo/base/1/13196 (0B, 100%)",
                     "P00   INFO: full backup size = 31MB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000070000000000000018, lsn = 0/18000138",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "4"
                        },
                        "repo1-path" : {
                           "value" : "/demo-repo"
                        },
                        "repo1-s3-bucket" : {
                           "value" : "demo-bucket"
                        },
                        "repo1-s3-endpoint" : {
                           "value" : "s3.us-east-1.amazonaws.com"
                        },
                        "repo1-s3-key" : {
                           "value" : "accessKey1"
                        },
                        "repo1-s3-key-secret" : {
                           "value" : "verySecretKey1"
                        },
                        "repo1-s3-region" : {
                           "value" : "us-east-1"
                        },
                        "repo1-type" : {
                           "value" : "s3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "process-max=4",
                     "repo1-azure-account=pgbackrest",
                     "repo1-azure-container=demo-container",
                     "repo1-azure-key=YXpLZXk=",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/demo-repo",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "repo1-s3-bucket=demo-bucket",
                     "repo1-s3-endpoint=s3.us-east-1.amazonaws.com",
                     "repo1-s3-key=accessKey1",
                     "repo1-s3-key-secret=verySecretKey1",
                     "repo1-s3-region=us-east-1",
                     "repo1-type=s3",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "echo \"172.17.0.3 demo-bucket.s3.us-east-1.amazonaws.com s3.us-east-1.amazonaws.com\" | tee -a /etc/hosts"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-create"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --process-max=4 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo --start-fast",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000070000000000000019, lsn = 0/19000028",
                     "       [filtered 1279 lines of output]",
                     "P03   INFO: backup file /var/lib/postgresql/12/demo/base/1/13201 (0B, 100%)",
                     "P04   INFO: backup file /var/lib/postgresql/12/demo/base/1/13196 (0B, 100%)",
                     "P00   INFO: full backup size = 31MB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000070000000000000019, lsn = 0/19000138",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stop"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stop command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stop command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-delete"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-delete command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stanza-delete command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "repo1",
                  "image" : "pgbackrest/doc:debian",
                  "name" : "repository",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "debian",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.6"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo adduser --disabled-password --gecos \"\" pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get install postgresql-client libxml2"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /var/log/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 750 /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest mkdir -m 750 /home/pgbackrest/.ssh"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh-keygen -f /home/pgbackrest/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -m 750 -p /var/lib/postgresql/.ssh"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh-keygen -f /var/lib/postgresql/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@pg-primary cat /var/lib/postgresql/.ssh/id_rsa.pub) | \\",
                     "    sudo -u pgbackrest tee -a /home/pgbackrest/.ssh/authorized_keys"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@repository cat /home/pgbackrest/.ssh/id_rsa.pub) | \\",
                     "    sudo -u postgres tee -a /var/lib/postgresql/.ssh/authorized_keys"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh postgres@pg-primary"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh pgbackrest@repository"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "repo1-path" : {
                           "value" : "/var/lib/pgbackrest"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg1-host" : {
                           "value" : "pg-primary"
                        },
                        "pg1-path" : {
                           "value" : "/var/lib/postgresql/12/demo"
                        }
                     },
                     "global" : {
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-retention-full" : {
                           "value" : "2"
                        },
                        "start-fast" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/postgresql/12/demo"
                        }
                     },
                     "global" : {
                        "log-level-file" : {
                           "value" : "detail"
                        },
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-host" : {
                           "value" : "repository"
                        }
                     }
                  },
                  "reset" : true
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo stanza-create"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo check"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: no prior backup exists, incr backup has been changed to full"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "timestamp start/stop"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: none",
                     "",
                     "    db (current)",
                     "        wal archive min/max (12-1): 00000008000000000000001F/000000080000000000000020",
                     "",
                     "        full backup: 20201005-142706F",
                     "            timestamp start/stop: 2020-10-05 14:27:06 / 2020-10-05 14:27:25",
                     "            wal start/stop: 00000008000000000000001F / 00000008000000000000001F",
                     "            database size: 31MB, backup size: 31MB",
                     "            repository size: 3.7MB, repository backup size: 3.7MB",
                     "",
                     "        full backup: 20201005-142727F",
                     "            timestamp start/stop: 2020-10-05 14:27:27 / 2020-10-05 14:27:35",
                     "            wal start/stop: 000000080000000000000020 / 000000080000000000000020",
                     "            database size: 31MB, backup size: 31MB",
                     "            repository size: 3.7MB, repository backup size: 3.7MB"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "err-expect" : "56",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "\\: stop file exists for all stanzas"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-1: [StopError] raised from remote-0 protocol on 'pg-primary': stop file exists for all stanzas",
                     "P00  ERROR: [056]: unable to find primary cluster - cannot proceed"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: stop file already exists for all stanzas"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "err-expect" : "56",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "\\: stop file exists for stanza demo"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-1: [StopError] raised from remote-0 protocol on 'pg-primary': stop file exists for stanza demo",
                     "P00  ERROR: [056]: unable to find primary cluster - cannot proceed"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "pg2",
                  "image" : "pgbackrest/doc:debian",
                  "name" : "pg-standby",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "debian",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.7"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo apt-get install postgresql-client libxml2"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/log/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -m 750 -p /var/lib/postgresql/.ssh"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh-keygen -f /var/lib/postgresql/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@pg-standby cat /var/lib/postgresql/.ssh/id_rsa.pub) | \\",
                     "    sudo -u pgbackrest tee -a /home/pgbackrest/.ssh/authorized_keys"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@repository cat /home/pgbackrest/.ssh/id_rsa.pub) | \\",
                     "    sudo -u postgres tee -a /var/lib/postgresql/.ssh/authorized_keys"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh postgres@pg-standby"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh pgbackrest@repository"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/postgresql/12/demo"
                        }
                     },
                     "global" : {
                        "log-level-file" : {
                           "value" : "detail"
                        },
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-host" : {
                           "value" : "repository"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_createcluster 12 demo"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/postgresql/12/demo/postgresql.auto.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Do not edit this file manually!",
                     "# It will be overwritten by the ALTER SYSTEM command.",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:23:05",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:24:23",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:24:47",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:25:29",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "# Removed by pgBackRest restore on 2020-10-05 14:26:59 # recovery_target_time = '2020-10-05 14:25:05.993548+00'",
                     "# Removed by pgBackRest restore on 2020-10-05 14:26:59 # recovery_target_action = 'promote'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:26:59",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:28:11",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/postgresql/12/demo/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "hot_standby" : {
                        "value" : "on"
                     },
                     "log_filename" : {
                        "value" : "'postgresql.log'"
                     },
                     "log_line_prefix" : {
                        "value" : "''"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "wal_level" : {
                        "value" : "replica"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "hot_standby = on",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = replica"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "entering standby mode|database system is ready to accept read only connections"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 4 lines of output]",
                     "LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"",
                     "LOG:  database system was interrupted; last known up at 2020-10-05 14:27:27 UTC",
                     "LOG:  entering standby mode",
                     "LOG:  restored log file \"00000008.history\" from archive",
                     "LOG:  restored log file \"000000080000000000000020\" from archive",
                     "LOG:  redo starts at 0/20000028",
                     "LOG:  consistent recovery state reached at 0/20000138",
                     "LOG:  database system is ready to accept read only connections"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    begin; \\",
                     "    create table replicated_table (message text); \\",
                     "    insert into replicated_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select * from replicated_table\";"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from replicated_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"replicated_table\" does not exist",
                     "LINE 1: select * from replicated_table;",
                     "                      ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select *, current_timestamp from pg_switch_wal()\";"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     " pg_switch_wal |       current_timestamp       ",
                     "---------------+-------------------------------",
                     " 0/21021750    | 2020-10-05 14:28:20.683628+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select *, current_timestamp from replicated_table\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |       current_timestamp       ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:28:26.110601+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "because this is a standby"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-host=repository --stanza=demo",
                     "P00   INFO: switch wal not performed because this is a standby",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    create user replicator password 'jw8s0F4' replication\";"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'echo \\",
                     "    \"host    replication     replicator      172.17.0.7/32           md5\" \\",
                     "    >> /etc/postgresql/12/demo/pg_hba.conf'"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo reload"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "recovery-option" : {
                           "value" : "primary_conninfo=host=172.17.0.5 port=5432 user=replicator"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'echo \\",
                     "    \"172.17.0.5:*:replication:replicator:jw8s0F4\" \\",
                     "    >> /var/lib/postgresql/.pgpass'"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres chmod 600 /var/lib/postgresql/.pgpass"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/postgresql/12/demo/postgresql.auto.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Do not edit this file manually!",
                     "# It will be overwritten by the ALTER SYSTEM command.",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:23:05",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:24:23",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:24:47",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:25:29",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "# Removed by pgBackRest restore on 2020-10-05 14:26:59 # recovery_target_time = '2020-10-05 14:25:05.993548+00'",
                     "# Removed by pgBackRest restore on 2020-10-05 14:26:59 # recovery_target_action = 'promote'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:26:59",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "",
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:28:33",
                     "primary_conninfo = 'host=172.17.0.5 port=5432 user=replicator'",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo start"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/postgresql/postgresql-12-demo.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "started streaming WAL from primary"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 11 lines of output]",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  restored log file \"000000080000000000000021\" from archive",
                     "LOG:  started streaming WAL from primary at 0/22000000 on timeline 8"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    begin; \\",
                     "    create table stream_table (message text); \\",
                     "    insert into stream_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select *, current_timestamp from stream_table\";"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |       current_timestamp       ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:28:41.406513+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select *, current_timestamp from stream_table\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |       current_timestamp       ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:28:41.918799+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 750 /var/spool/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/spool/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 750 /var/spool/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/spool/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "archive-async" : {
                           "value" : "y"
                        },
                        "spool-path" : {
                           "value" : "/var/spool/pgbackrest"
                        }
                     },
                     "global:archive-get" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     },
                     "global:archive-push" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "global" : {
                        "archive-async" : {
                           "value" : "y"
                        },
                        "spool-path" : {
                           "value" : "/var/spool/pgbackrest"
                        }
                     },
                     "global:archive-get" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     },
                     "global:archive-push" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"alter user replicator password 'bogus'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ALTER ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo restart"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres rm -f /var/log/pgbackrest/demo-archive-push-async.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal();\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "WAL segment"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --repo1-host=repository --stanza=demo",
                     "P00   INFO: WAL segment 000000080000000000000027 successfully archived to '/var/lib/pgbackrest/archive/demo/12-1/0000000800000000/000000080000000000000027-ebaad7538886bb429282523d91b168c4991ccb36.gz'",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/pgbackrest/demo-archive-push-async.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        " WAL file\\(s\\) to archive|pushed WAL file \\'0000000"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/postgresql/12/demo/pg_wal] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 1 WAL file(s) to archive: 000000080000000000000022",
                     "P01 DETAIL: pushed WAL file '000000080000000000000022' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully",
                     "",
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/postgresql/12/demo/pg_wal] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 4 WAL file(s) to archive: 000000080000000000000023...000000080000000000000026",
                     "P01 DETAIL: pushed WAL file '000000080000000000000023' to the archive",
                     "P02 DETAIL: pushed WAL file '000000080000000000000024' to the archive",
                     "P01 DETAIL: pushed WAL file '000000080000000000000025' to the archive",
                     "P02 DETAIL: pushed WAL file '000000080000000000000026' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully",
                     "",
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/postgresql/12/demo/pg_wal] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 1 WAL file(s) to archive: 000000080000000000000027",
                     "P01 DETAIL: pushed WAL file '000000080000000000000027' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 5"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/pgbackrest/demo-archive-get-async.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "found [0-F]{24} in the archive"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-get:async command begin 2.30: [000000080000000000000020, 000000080000000000000021, 000000080000000000000022, 000000080000000000000023, 000000080000000000000024, 000000080000000000000025, 000000080000000000000026, 000000080000000000000027] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: get 8 WAL file(s) from archive: 000000080000000000000020...000000080000000000000027",
                     "P01 DETAIL: found 000000080000000000000020 in the archive",
                     "P02 DETAIL: found 000000080000000000000021 in the archive",
                     "P01 DETAIL: unable to find 000000080000000000000022 in the archive",
                     "P02 DETAIL: unable to find 000000080000000000000023 in the archive",
                     "       [filtered 20 lines of output]",
                     "P00   INFO: archive-get:async command begin 2.30: [000000080000000000000022, 000000080000000000000023, 000000080000000000000024, 000000080000000000000025, 000000080000000000000026, 000000080000000000000027, 000000080000000000000028, 000000080000000000000029] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/postgresql/12/demo --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: get 8 WAL file(s) from archive: 000000080000000000000022...000000080000000000000029",
                     "P01 DETAIL: found 000000080000000000000022 in the archive",
                     "P02 DETAIL: found 000000080000000000000023 in the archive",
                     "P02 DETAIL: found 000000080000000000000025 in the archive",
                     "P01 DETAIL: found 000000080000000000000024 in the archive",
                     "P01 DETAIL: unable to find 000000080000000000000027 in the archive",
                     "P01 DETAIL: unable to find 000000080000000000000028 in the archive",
                     "P01 DETAIL: unable to find 000000080000000000000029 in the archive",
                     "P02 DETAIL: found 000000080000000000000026 in the archive",
                     "P00   INFO: archive-get:async command end: completed successfully",
                     "",
                     "       [filtered 8 lines of output]",
                     "P02 DETAIL: unable to find 00000008000000000000002D in the archive",
                     "P02 DETAIL: unable to find 00000008000000000000002E in the archive",
                     "P01 DETAIL: found 000000080000000000000027 in the archive",
                     "P00   INFO: archive-get:async command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"alter user replicator password 'jw8s0F4'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ALTER ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg2-host" : {
                           "value" : "pg-standby"
                        },
                        "pg2-path" : {
                           "value" : "/var/lib/postgresql/12/demo"
                        }
                     },
                     "global" : {
                        "backup-standby" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/postgresql/12/demo",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/postgresql/12/demo",
                     "",
                     "[global]",
                     "backup-standby=y",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --log-level-console=detail backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup file pg-primary|replay on the standby"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 2 lines of output]",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000080000000000000029, lsn = 0/29000028",
                     "P00   INFO: wait for replay on the standby to reach 0/29000028",
                     "P00   INFO: replay on the standby reached 0/29000028",
                     "P01   INFO: backup file pg-primary:/var/lib/postgresql/12/demo/global/pg_control (8KB, 0%) checksum 0aa92bfa26968248cb4daff8209e6d2b59ce0310",
                     "P04   INFO: backup file pg-standby:/var/lib/postgresql/12/demo/base/13359/2674 (344KB, 15%) checksum e9857616d26be7bb81dd8e4dccc4f31af2932789",
                     "P01   INFO: backup file pg-primary:/var/lib/postgresql/12/demo/pg_logical/replorigin_checkpoint (8B, 15%) checksum 347fc8f2df71bd4436e38bd1516ccd7ea0d46532",
                     "P02   INFO: backup file pg-standby:/var/lib/postgresql/12/demo/base/13359/2608 (456KB, 34%) checksum 6b714e16f30c51ecb88f59edcf431be791d41025",
                     "P03   INFO: backup file pg-standby:/var/lib/postgresql/12/demo/base/13359/1249 (440KB, 53%) checksum a14f8bafc904ad22f4916ed36dca398ff44e550c",
                     "       [filtered 1292 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 12 demo stop"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres /usr/lib/postgresql/13/bin/initdb \\",
                     "    -D /var/lib/postgresql/13/demo -k -A peer"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_createcluster 13 demo"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'cd /var/lib/postgresql && \\",
                     "    /usr/lib/postgresql/13/bin/pg_upgrade \\",
                     "    --old-bindir=/usr/lib/postgresql/12/bin \\",
                     "    --new-bindir=/usr/lib/postgresql/13/bin \\",
                     "    --old-datadir=/var/lib/postgresql/12/demo \\",
                     "    --new-datadir=/var/lib/postgresql/13/demo \\",
                     "    --old-options=\" -c config_file=/etc/postgresql/12/demo/postgresql.conf\" \\",
                     "    --new-options=\" -c config_file=/etc/postgresql/13/demo/postgresql.conf\"'"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Upgrade Complete"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 62 lines of output]",
                     "Creating script to delete old cluster                       ok",
                     "",
                     "Upgrade Complete",
                     "----------------",
                     "Optimizer statistics are not transferred by pg_upgrade so,",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/postgresql/13/demo/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "listen_addresses" : {
                        "value" : "'*'"
                     },
                     "log_line_prefix" : {
                        "value" : "''"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "port" : {
                        "value" : "5432"
                     },
                     "wal_level" : {
                        "value" : "replica"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "listen_addresses = '*'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "port = 5432",
                     "wal_level = replica"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/postgresql/13/demo"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/13/demo",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/postgresql/13/demo"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/postgresql/13/demo",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/postgresql/13/demo"
                        },
                        "pg2-path" : {
                           "value" : "/var/lib/postgresql/13/demo"
                        }
                     },
                     "global" : {
                        "backup-standby" : {
                           "value" : "n"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/postgresql/13/demo",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/postgresql/13/demo",
                     "",
                     "[global]",
                     "backup-standby=n",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo cp /etc/postgresql/12/demo/pg_hba.conf \\",
                     "    /etc/postgresql/13/demo/pg_hba.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --no-online \\",
                     "    --log-level-console=info stanza-upgrade"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-upgrade command begin 2.30: --no-backup-standby --log-level-console=info --log-level-stderr=off --no-log-timestamp --no-online --pg1-host=pg-primary --pg2-host=pg-standby --pg1-path=/var/lib/postgresql/13/demo --pg2-path=/var/lib/postgresql/13/demo --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: stanza-upgrade command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 13 demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pg_lsclusters"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "Ver Cluster Port Status Owner    Data directory              Log file",
                     "12  demo    5432 down   postgres /var/lib/postgresql/12/demo /var/log/postgresql/postgresql-12-demo.log",
                     "13  demo    5432 online postgres /var/lib/postgresql/13/demo /var/log/postgresql/postgresql-13-demo.log"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_dropcluster 12 demo"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_dropcluster 12 demo"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_createcluster 13 demo"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo check"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-2: [DbConnectError] raised from remote-0 protocol on 'pg-standby': unable to connect to 'dbname='postgres' port=5432': could not connect to server: No such file or directory",
                     "            \tIs the server running locally and accepting",
                     "            \tconnections on Unix domain socket \"/var/run/postgresql/.s.PGSQL.5432\"?"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/postgresql/13/demo/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "hot_standby" : {
                        "value" : "on"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "hot_standby = on"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo pg_ctlcluster 13 demo start"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "backup-standby" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/postgresql/13/demo",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/postgresql/13/demo",
                     "",
                     "[global]",
                     "backup-standby=y",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            }
         ]
      }
   },
   "{\"os-type\":\"centos6\"}" : {
      "all" : {
         "user-guide" : [
            {
               "key" : {
                  "id" : "azure",
                  "image" : "mcr.microsoft.com/azure-storage/azurite",
                  "name" : "azure-server",
                  "option" : "-v {[host-repo-path]}/doc/resource/fake-cert/azure-server.crt:/root/public.crt:ro -v {[host-repo-path]}/doc/resource/fake-cert/azure-server.key:/root/private.key:ro -e AZURITE_ACCOUNTS='pgbackrest:YXpLZXk='",
                  "os" : "centos6",
                  "param" : "azurite-blob --blobPort 443 --blobHost 0.0.0.0 --cert=/root/public.crt --key=/root/private.key",
                  "update-hosts" : false
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.2"
               }
            },
            {
               "key" : {
                  "id" : "s3",
                  "image" : "minio/minio:RELEASE.2020-05-06T23-23-25Z",
                  "name" : "s3-server",
                  "option" : "-v {[host-repo-path]}/doc/resource/fake-cert/s3-server.crt:/root/.minio/certs/public.crt:ro -v {[host-repo-path]}/doc/resource/fake-cert/s3-server.key:/root/.minio/certs/private.key:ro -e MINIO_REGION=us-east-1 -e MINIO_DOMAIN=s3.us-east-1.amazonaws.com -e MINIO_BROWSER=off -e MINIO_ACCESS_KEY=accessKey1 -e MINIO_SECRET_KEY=verySecretKey1",
                  "os" : "centos6",
                  "param" : "server /data --address :443",
                  "update-hosts" : false
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.3"
               }
            },
            {
               "key" : {
                  "id" : "build",
                  "image" : "pgbackrest/doc:centos6",
                  "name" : "build",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos6",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.4"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo cp -r /pgbackrest/src /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown -R vagrant /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install make gcc postgresql-devel openssl-devel libxml2-devel \\",
                     "    lz4-devel libzstd-devel bzip2-devel"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "cd /build/pgbackrest-release-2.30/src && ./configure && make"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "pg1",
                  "image" : "pgbackrest/doc:centos6",
                  "name" : "pg-primary",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos6",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.5"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install postgresql-libs"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/log/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "pgBackRest 2.30 - General help",
                     "",
                     "Usage:",
                     "    pgbackrest [options] [command]",
                     "",
                     "Commands:",
                     "    archive-get     Get a WAL segment from the archive.",
                     "    archive-push    Push a WAL segment to the archive.",
                     "    backup          Backup a database cluster.",
                     "    check           Check the configuration.",
                     "    expire          Expire backups that exceed retention.",
                     "    help            Get help.",
                     "    info            Retrieve information about backups.",
                     "    restore         Restore a database cluster.",
                     "    stanza-create   Create the required stanza data.",
                     "    stanza-delete   Delete a stanza.",
                     "    stanza-upgrade  Upgrade a stanza.",
                     "    start           Allow pgBackRest processes to run.",
                     "    stop            Stop pgBackRest processes from running.",
                     "    version         Get version.",
                     "",
                     "Use 'pgbackrest help [command]' for more information."
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres /usr/pgsql-9.5/bin/initdb \\",
                     "    -D /var/lib/pgsql/9.5/data -k -A peer"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.5/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "listen_addresses" : {
                        "value" : "'*'"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.5/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "log_line_prefix" : {
                        "value" : "''"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'",
                     "log_line_prefix = ''"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.5/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "log_filename" : {
                        "value" : "'postgresql.log'"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/9.5/data"
                        }
                     },
                     "global" : {
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres bash -c ' \\",
                     "    export PGBACKREST_LOG_PATH=/path/set/by/env && \\",
                     "    pgbackrest --log-level-console=error help backup log-path'"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "current\\: \\/path\\/set\\/by\\/env"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "pgBackRest 2.30 - 'backup' command - 'log-path' option help",
                     "",
                     "Path where log files are stored.",
                     "",
                     "The log path provides a location for pgBackRest to store log files. Note that",
                     "if log-level-file=off then no log path is required.",
                     "",
                     "current: /path/set/by/env",
                     "default: /var/log/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 750 /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-path" : {
                           "value" : "/var/lib/pgbackrest"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.5/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "wal_level" : {
                        "value" : "hot_standby"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "listen_addresses = '*'",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = hot_standby"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 restart"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global:archive-push" : {
                        "compress-level" : {
                           "value" : "3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-full" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-cipher-pass" : {
                           "value" : "zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO"
                        },
                        "repo1-cipher-type" : {
                           "value" : "aes-256-cbc"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        " successfully archived to "
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: WAL segment 000000010000000000000001 successfully archived to '/var/lib/pgbackrest/archive/demo/9.5-1/0000000100000000/000000010000000000000001-6d4208f4c25214235ceff950fa593d77910a5014.gz'",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the next regular checkpoint completes",
                     "P00   INFO: backup start archive = 000000010000000000000002, lsn = 0/2000028",
                     "       [filtered 851 lines of output]",
                     "P01   INFO: backup file /var/lib/pgsql/9.5/data/base/1/12216 (0B, 100%)",
                     "P01   INFO: backup file /var/lib/pgsql/9.5/data/base/1/12211 (0B, 100%)",
                     "P00   INFO: full backup size = 20.6MB",
                     "P00   INFO: execute exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000010000000000000002, lsn = 0/2000130",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-140551F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "diff backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 5 lines of output]",
                     "P01   INFO: backup file /var/lib/pgsql/9.5/data/pg_log/postgresql.log (1010B, 97%) checksum 187b5912c92493a0b0747a8137ec71b25085f42b",
                     "P01   INFO: backup file /var/lib/pgsql/9.5/data/backup_label (246B, 100%) checksum 95d123d7d2cc22e50092f98fd68b53dc71a6fe6c",
                     "P00   INFO: diff backup size = 9.2KB",
                     "P00   INFO: execute exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000010000000000000003, lsn = 0/3000130",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "(full|incr|diff) backup"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: aes-256-cbc",
                     "",
                     "    db (current)",
                     "        wal archive min/max (9.5-1): 000000010000000000000001/000000010000000000000003",
                     "",
                     "        full backup: 20201005-140551F",
                     "            timestamp start/stop: 2020-10-05 14:05:51 / 2020-10-05 14:06:08",
                     "            wal start/stop: 000000010000000000000002 / 000000010000000000000002",
                     "            database size: 20.6MB, backup size: 20.6MB",
                     "            repository size: 2.4MB, repository backup size: 2.4MB",
                     "",
                     "        diff backup: 20201005-140551F_20201005-140609D",
                     "            timestamp start/stop: 2020-10-05 14:06:09 / 2020-10-05 14:06:12",
                     "            wal start/stop: 000000010000000000000003 / 000000010000000000000003",
                     "            database size: 20.6MB, backup size: 9.2KB",
                     "            repository size: 2.4MB, repository backup size: 768B",
                     "            backup reference list: 20201005-140551F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres rm /var/lib/pgsql/9.5/data/global/pg_control"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm -f /var/lib/pgsql/9.5/pgstartup.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "err-expect" : "1",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo cat /var/lib/pgsql/9.5/pgstartup.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "could not find the database system"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "postmaster: could not find the database system",
                     "Expected to find it in the directory \"/var/lib/pgsql/9.5/data\",",
                     "but could not open file \"/var/lib/pgsql/9.5/data/global/pg_control\": No such file or directory"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres find /var/lib/pgsql/9.5/data -mindepth 1 -delete"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup begins after the next regular checkpoint completes"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --type=incr",
                     "P00   INFO: last backup label = 20201005-140551F_20201005-140609D, version = 2.30",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the next regular checkpoint completes",
                     "P00   INFO: backup start archive = 000000020000000000000005, lsn = 0/5000028",
                     "P00   WARN: a timeline switch has occurred since the 20201005-140551F_20201005-140609D backup, enabling delta checksum",
                     "       [filtered 11 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "start-fast" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup begins after the requested immediate checkpoint completes"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --start-fast --type=incr",
                     "P00   INFO: last backup label = 20201005-140551F_20201005-140635I, version = 2.30",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000020000000000000006, lsn = 0/6000028",
                     "P01   INFO: backup file /var/lib/pgsql/9.5/data/global/pg_control (8KB, 80%) checksum 4210ada9eab05d2aca599425b33efff395269101",
                     "       [filtered 9 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 550 /var/lib/pgbackrest/backup/demo/"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "err-expect" : "47",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "ERROR:"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 2 lines of output]",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000020000000000000008, lsn = 0/8000028",
                     "P00  ERROR: [047]: unable to create path '/var/lib/pgbackrest/backup/demo/20201005-140551F_20201005-140645I': [13] Permission denied",
                     "P00   INFO: backup command end: aborted with exception [047]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 750 /var/lib/pgbackrest/backup/demo/"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "err-expect" : "57",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "ERROR:"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --start-fast --type=incr",
                     "P00   INFO: last backup label = 20201005-140551F_20201005-140641I, version = 2.30",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00  ERROR: [057]: unable to execute query 'select lsn::text as lsn,",
                     "                   pg_catalog.pg_xlogfile_name(lsn)::text as wal_segment_name",
                     "              from pg_catalog.pg_start_backup('pgBackRest backup started at ' || current_timestamp, true) as lsn': ERROR:  a backup is already in progress",
                     "            HINT:  Run pg_stop_backup() and try again.",
                     "P00   INFO: backup command end: aborted with exception [057]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "stop-auto" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "stop-auto=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "cluster is already in backup mode|backup begins after the requested immediate checkpoint completes"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --start-fast --stop-auto --type=incr",
                     "P00   INFO: last backup label = 20201005-140551F_20201005-140641I, version = 2.30",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   WARN: the cluster is already in backup mode but no pgBackRest backup process is running. pg_stop_backup() will be called so a new backup can be started.",
                     "P00   INFO: backup start archive = 000000020000000000000009, lsn = 0/9000028",
                     "P01   INFO: backup file /var/lib/pgsql/9.5/data/global/pg_control (8KB, 75%) checksum 586fddfbb9f08ed2cc81d0c5a61054af2a50c53d",
                     "       [filtered 9 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -p /var/lib/pgsql/pgbackrest/doc/example"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cp -r /pgbackrest/doc/example/* \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-info.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-- An example of monitoring pgBackRest from within PostgreSQL",
                     "--",
                     "-- Use copy to export data from the pgBackRest info command into the jsonb",
                     "-- type so it can be queried directly by PostgreSQL.",
                     "",
                     "-- Create monitor schema",
                     "create schema monitor;",
                     "",
                     "-- Get pgBackRest info in JSON format",
                     "create function monitor.pgbackrest_info()",
                     "    returns jsonb AS $$",
                     "declare",
                     "    data jsonb;",
                     "begin",
                     "    -- Create a temp table to hold the JSON data",
                     "    create temp table temp_pgbackrest_data (data jsonb);",
                     "",
                     "    -- Copy data into the table directly from the pgBackRest info command",
                     "    copy temp_pgbackrest_data (data)",
                     "        from program",
                     "            'pgbackrest --output=json info' (format text);",
                     "",
                     "    select temp_pgbackrest_data.data",
                     "      into data",
                     "      from temp_pgbackrest_data;",
                     "",
                     "    drop table temp_pgbackrest_data;",
                     "",
                     "    return data;",
                     "end $$ language plpgsql;"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -f \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-info.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-query.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-- Get last successful backup for each stanza",
                     "--",
                     "-- Requires the monitor.pgbackrest_info function.",
                     "with stanza as",
                     "(",
                     "    select data->'name' as name,",
                     "           data->'backup'->(",
                     "               jsonb_array_length(data->'backup') - 1) as last_backup,",
                     "           data->'archive'->(",
                     "               jsonb_array_length(data->'archive') - 1) as current_archive",
                     "      from jsonb_array_elements(monitor.pgbackrest_info()) as data",
                     ")",
                     "select name,",
                     "       to_timestamp(",
                     "           (last_backup->'timestamp'->>'stop')::numeric) as last_successful_backup,",
                     "       current_archive->>'max' as last_archived_wal",
                     "  from stanza;"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -f \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-query.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "  name  | last_successful_backup |    last_archived_wal     ",
                     "--------+------------------------+--------------------------",
                     " \"demo\" | 2020-10-05 14:06:55+00 | 000000020000000000000009",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-full" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "stop-auto=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=full \\",
                     "    --log-level-console=detail backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "archive retention on backup 20201005-140551F|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 861 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=detail --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00 DETAIL: archive retention on backup 20201005-140551F, archiveId = 9.5-1, start = 000000010000000000000002",
                     "P00 DETAIL: remove archive: archiveId = 9.5-1, start = 000000010000000000000001, stop = 000000010000000000000001",
                     "P00   INFO: expire command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-140700F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=full \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "expire full backup set\\: 20201005-140551F|archive retention on backup 20201005-140700F|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 861 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00   INFO: expire full backup set: 20201005-140551F, 20201005-140551F_20201005-140609D, 20201005-140551F_20201005-140635I, 20201005-140551F_20201005-140641I, 20201005-140551F_20201005-140651I",
                     "P00   INFO: remove expired backup 20201005-140551F_20201005-140651I",
                     "P00   INFO: remove expired backup 20201005-140551F_20201005-140641I",
                     "       [filtered 3 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-diff" : {
                           "value" : "1"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-diff=1",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "stop-auto=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-140717F_20201005-140737D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "expire diff backup set: 20201005-140717F_20201005-140737D"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 13 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-diff=1 --repo1-retention-full=2 --stanza=demo",
                     "P00   INFO: expire diff backup set: 20201005-140717F_20201005-140737D, 20201005-140717F_20201005-140740I",
                     "P00   INFO: remove expired backup 20201005-140717F_20201005-140740I",
                     "P00   INFO: remove expired backup 20201005-140717F_20201005-140737D"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-diff" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "stop-auto=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-140717F_20201005-140744D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select pg_create_restore_point('generate WAL'); select pg_switch_xlog(); \\",
                     "    select pg_create_restore_point('generate WAL'); select pg_switch_xlog();\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "new backup label"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 10 lines of output]",
                     "P00   INFO: backup stop archive = 000000020000000000000013, lsn = 0/130000F8",
                     "P00   INFO: check archive for segment(s) 000000020000000000000013:000000020000000000000013",
                     "P00   INFO: new backup label = 20201005-140717F_20201005-140751D",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-diff=2 --repo1-retention-full=2 --stanza=demo"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-140717F_20201005-140751D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=detail \\",
                     "    --repo1-retention-archive-type=diff --repo1-retention-archive=1 expire"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "archive retention on backup 20201005-140717F_20201005-140744D|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: expire command begin 2.30: --log-level-console=detail --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-archive=1 --repo1-retention-archive-type=diff --repo1-retention-diff=2 --repo1-retention-full=2 --stanza=demo",
                     "P00 DETAIL: archive retention on backup 20201005-140700F, archiveId = 9.5-1, start = 00000002000000000000000B, stop = 00000002000000000000000B",
                     "P00 DETAIL: archive retention on backup 20201005-140717F, archiveId = 9.5-1, start = 00000002000000000000000D, stop = 00000002000000000000000D",
                     "P00 DETAIL: archive retention on backup 20201005-140717F_20201005-140744D, archiveId = 9.5-1, start = 000000020000000000000010, stop = 000000020000000000000010",
                     "P00 DETAIL: archive retention on backup 20201005-140717F_20201005-140751D, archiveId = 9.5-1, start = 000000020000000000000013",
                     "P00 DETAIL: remove archive: archiveId = 9.5-1, start = 00000002000000000000000C, stop = 00000002000000000000000C",
                     "P00 DETAIL: remove archive: archiveId = 9.5-1, start = 00000002000000000000000E, stop = 00000002000000000000000F",
                     "P00 DETAIL: remove archive: archiveId = 9.5-1, start = 000000020000000000000011, stop = 000000020000000000000012",
                     "P00   INFO: expire command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --log-level-console=detail restore"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "demo\\/PG_VERSION - exists and matches backup|remove invalid files|rename global\\/pg_control"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 2 lines of output]",
                     "P00 DETAIL: check '/var/lib/pgsql/9.5/data' exists",
                     "P00 DETAIL: remove 'global/pg_control' so cluster will not start if restore does not complete",
                     "P00   INFO: remove invalid files/links/paths from '/var/lib/pgsql/9.5/data'",
                     "P00 DETAIL: remove invalid file '/var/lib/pgsql/9.5/data/backup_label.old'",
                     "P00 DETAIL: remove invalid file '/var/lib/pgsql/9.5/data/base/12378/pg_internal.init'",
                     "       [filtered 900 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create database test1;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create database test2;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create table test1_table (id int); \\",
                     "    insert into test1_table (id) values (1);\" test1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "INSERT 0 1"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create table test2_table (id int); \\",
                     "    insert into test2_table (id) values (2);\" test2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "INSERT 0 1"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -Atc \"select oid from pg_database where datname = 'test1'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres du -sh /var/lib/pgsql/9.5/data/base/24576"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "6.9M\t/var/lib/pgsql/9.5/data/base/24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-140717F_20201005-140805I"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --set=20201005-140717F_20201005-140805I info"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "database list"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 11 lines of output]",
                     "            repository size: 4MB, repository backup size: 1.6MB",
                     "            backup reference list: 20201005-140717F, 20201005-140717F_20201005-140751D",
                     "            database list: postgres (12378), test1 (24576), test2 (24577)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --db-include=test2 restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from test2_table;\" test2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     " id ",
                     "----",
                     "  2",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from test1_table;\" test1"
                  ],
                  "err-expect" : "2",
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "relation mapping file.*contains invalid data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "psql: FATAL:  relation mapping file \"base/24576/pg_filenode.map\" contains invalid data"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres du -sh /var/lib/pgsql/9.5/data/base/24576"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "152K\t/var/lib/pgsql/9.5/data/base/24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"drop database test1;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "DROP DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select oid, datname from pg_database order by oid;\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "test2"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "  oid  |  datname  ",
                     "-------+-----------",
                     "     1 | template1",
                     " 12373 | template0",
                     " 12378 | postgres",
                     " 24577 | test2",
                     "(4 rows)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    create table important_table (message text); \\",
                     "    insert into important_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -Atc \"select current_timestamp\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "2020-10-05 14:08:36.991168+00"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    drop table important_table; \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: ...le important_table;     commit;     select * from important_...",
                     "                                                             ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --type=time \"--target=2020-10-05 14:08:36.991168+00\" \\",
                     "    --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/recovery.conf"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery_target_time"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:08:41",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "recovery_target_time = '2020-10-05 14:08:36.991168+00'",
                     "recovery_target_action = 'promote'"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery stopping before|last completed transaction|starting point-in-time recovery"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 14:08:27 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 14:08:36.991168+00",
                     "LOG:  restored log file \"00000004.history\" from archive",
                     "LOG:  restored log file \"000000040000000000000018\" from archive",
                     "LOG:  redo starts at 0/18000028",
                     "LOG:  consistent recovery state reached at 0/180000F8",
                     "LOG:  restored log file \"000000040000000000000019\" from archive",
                     "LOG:  recovery stopping before commit of transaction 630, time 2020-10-05 14:08:39.032171+00",
                     "LOG:  redo done at 0/1901B988",
                     "LOG:  last completed transaction was at log time 2020-10-05 14:08:35.339197+00",
                     "LOG:  selected new timeline ID: 5",
                     "LOG:  archive recovery complete",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    drop table important_table; \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: ...le important_table;     commit;     select * from important_...",
                     "                                                             ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-140717F_20201005-140849I"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "20201005-140717F_20201005-140849I"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: aes-256-cbc",
                     "",
                     "    db (current)",
                     "        wal archive min/max (9.5-1): 00000002000000000000000B/00000005000000000000001A",
                     "",
                     "        full backup: 20201005-140700F",
                     "            timestamp start/stop: 2020-10-05 14:07:00 / 2020-10-05 14:07:16",
                     "            wal start/stop: 00000002000000000000000B / 00000002000000000000000B",
                     "            database size: 20.6MB, backup size: 20.6MB",
                     "            repository size: 2.4MB, repository backup size: 2.4MB",
                     "",
                     "        full backup: 20201005-140717F",
                     "            timestamp start/stop: 2020-10-05 14:07:17 / 2020-10-05 14:07:34",
                     "            wal start/stop: 00000002000000000000000D / 00000002000000000000000D",
                     "            database size: 20.6MB, backup size: 20.6MB",
                     "            repository size: 2.4MB, repository backup size: 2.4MB",
                     "",
                     "        diff backup: 20201005-140717F_20201005-140751D",
                     "            timestamp start/stop: 2020-10-05 14:07:51 / 2020-10-05 14:07:54",
                     "            wal start/stop: 000000020000000000000013 / 000000020000000000000013",
                     "            database size: 20.6MB, backup size: 116.2KB",
                     "            repository size: 2.4MB, repository backup size: 12.6KB",
                     "            backup reference list: 20201005-140717F",
                     "",
                     "        incr backup: 20201005-140717F_20201005-140805I",
                     "            timestamp start/stop: 2020-10-05 14:08:05 / 2020-10-05 14:08:14",
                     "            wal start/stop: 000000030000000000000015 / 000000030000000000000015",
                     "            database size: 34MB, backup size: 13.5MB",
                     "            repository size: 4MB, repository backup size: 1.6MB",
                     "            backup reference list: 20201005-140717F, 20201005-140717F_20201005-140751D",
                     "",
                     "        diff backup: 20201005-140717F_20201005-140826D",
                     "            timestamp start/stop: 2020-10-05 14:08:26 / 2020-10-05 14:08:34",
                     "            wal start/stop: 000000040000000000000018 / 000000040000000000000018",
                     "            database size: 27.3MB, backup size: 6.9MB",
                     "            repository size: 3.2MB, repository backup size: 831.8KB",
                     "            backup reference list: 20201005-140717F",
                     "",
                     "        incr backup: 20201005-140717F_20201005-140849I",
                     "            timestamp start/stop: 2020-10-05 14:08:49 / 2020-10-05 14:08:53",
                     "            wal start/stop: 00000005000000000000001A / 00000005000000000000001A",
                     "            database size: 27.3MB, backup size: 2.0MB",
                     "            repository size: 3.2MB, repository backup size: 210.3KB",
                     "            backup reference list: 20201005-140717F, 20201005-140717F_20201005-140826D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --set=20201005-140717F_20201005-140849I \\",
                     "    --type=time \"--target=2020-10-05 14:08:36.991168+00\" --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: select * from important_table",
                     "                      ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "starting point-in-time recovery|consistent recovery state reached"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 14:08:49 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 14:08:36.991168+00",
                     "LOG:  restored log file \"00000005.history\" from archive",
                     "LOG:  restored log file \"00000005000000000000001A\" from archive",
                     "LOG:  redo starts at 0/1A000028",
                     "LOG:  consistent recovery state reached at 0/1A0000F8",
                     "LOG:  redo done at 0/1A0000F8",
                     "LOG:  restored log file \"00000005000000000000001A\" from archive",
                     "       [filtered 8 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --type=time \"--target=2020-10-05 14:08:36.991168+00\" \\",
                     "    --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery stopping before|last completed transaction|starting point-in-time recovery"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 14:08:27 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 14:08:36.991168+00",
                     "LOG:  restored log file \"00000004.history\" from archive",
                     "LOG:  restored log file \"000000040000000000000018\" from archive",
                     "LOG:  redo starts at 0/18000028",
                     "LOG:  consistent recovery state reached at 0/180000F8",
                     "LOG:  restored log file \"000000040000000000000019\" from archive",
                     "LOG:  recovery stopping before commit of transaction 630, time 2020-10-05 14:08:39.032171+00",
                     "LOG:  redo done at 0/1901B988",
                     "LOG:  last completed transaction was at log time 2020-10-05 14:08:35.339197+00",
                     "LOG:  restored log file \"00000005.history\" from archive",
                     "LOG:  restored log file \"00000006.history\" from archive",
                     "       [filtered 6 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "4"
                        },
                        "repo1-azure-account" : {
                           "value" : "pgbackrest"
                        },
                        "repo1-azure-container" : {
                           "value" : "demo-container"
                        },
                        "repo1-azure-host" : {
                           "value" : "blob.core.windows.net"
                        },
                        "repo1-azure-key" : {
                           "value" : "YXpLZXk="
                        },
                        "repo1-path" : {
                           "value" : "/demo-repo"
                        },
                        "repo1-type" : {
                           "value" : "azure"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "process-max=4",
                     "repo1-azure-account=pgbackrest",
                     "repo1-azure-container=demo-container",
                     "repo1-azure-key=YXpLZXk=",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/demo-repo",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "repo1-type=azure",
                     "start-fast=y",
                     "stop-auto=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "echo \"172.17.0.2 blob.core.windows.net\" | tee -a /etc/hosts"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-create"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-azure-account=<redacted> --repo1-azure-container=demo-container --repo1-azure-host=blob.core.windows.net --repo1-azure-key=<redacted> --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-type=azure --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --process-max=4 --repo1-azure-account=<redacted> --repo1-azure-container=demo-container --repo1-azure-host=blob.core.windows.net --repo1-azure-key=<redacted> --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-type=azure --stanza=demo --start-fast --stop-auto",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 00000007000000000000001A, lsn = 0/1A000028",
                     "       [filtered 1119 lines of output]",
                     "P03   INFO: backup file /var/lib/pgsql/9.5/data/base/1/12216 (0B, 100%)",
                     "P04   INFO: backup file /var/lib/pgsql/9.5/data/base/1/12211 (0B, 100%)",
                     "P00   INFO: full backup size = 27.3MB",
                     "P00   INFO: execute exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 00000007000000000000001A, lsn = 0/1A000130",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "4"
                        },
                        "repo1-path" : {
                           "value" : "/demo-repo"
                        },
                        "repo1-s3-bucket" : {
                           "value" : "demo-bucket"
                        },
                        "repo1-s3-endpoint" : {
                           "value" : "s3.us-east-1.amazonaws.com"
                        },
                        "repo1-s3-key" : {
                           "value" : "accessKey1"
                        },
                        "repo1-s3-key-secret" : {
                           "value" : "verySecretKey1"
                        },
                        "repo1-s3-region" : {
                           "value" : "us-east-1"
                        },
                        "repo1-type" : {
                           "value" : "s3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "process-max=4",
                     "repo1-azure-account=pgbackrest",
                     "repo1-azure-container=demo-container",
                     "repo1-azure-key=YXpLZXk=",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/demo-repo",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "repo1-s3-bucket=demo-bucket",
                     "repo1-s3-endpoint=s3.us-east-1.amazonaws.com",
                     "repo1-s3-key=accessKey1",
                     "repo1-s3-key-secret=verySecretKey1",
                     "repo1-s3-region=us-east-1",
                     "repo1-type=s3",
                     "start-fast=y",
                     "stop-auto=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "echo \"172.17.0.3 demo-bucket.s3.us-east-1.amazonaws.com s3.us-east-1.amazonaws.com\" | tee -a /etc/hosts"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-create"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --process-max=4 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo --start-fast --stop-auto",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 00000007000000000000001B, lsn = 0/1B000028",
                     "       [filtered 1119 lines of output]",
                     "P01   INFO: backup file /var/lib/pgsql/9.5/data/base/1/12226 (0B, 100%)",
                     "P02   INFO: backup file /var/lib/pgsql/9.5/data/base/1/12221 (0B, 100%)",
                     "P00   INFO: full backup size = 27.3MB",
                     "P00   INFO: execute exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 00000007000000000000001B, lsn = 0/1B0000F8",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stop"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stop command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stop command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-delete"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-delete command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stanza-delete command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "repo1",
                  "image" : "pgbackrest/doc:centos6",
                  "name" : "repository",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos6",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.6"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo groupadd pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo adduser -gpgbackrest -n pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install postgresql-libs"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /var/log/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 750 /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest mkdir -m 750 /home/pgbackrest/.ssh"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh-keygen -f /home/pgbackrest/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -m 750 -p /var/lib/pgsql/.ssh"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh-keygen -f /var/lib/pgsql/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@pg-primary cat /var/lib/pgsql/.ssh/id_rsa.pub) | \\",
                     "    sudo -u pgbackrest tee -a /home/pgbackrest/.ssh/authorized_keys"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@repository cat /home/pgbackrest/.ssh/id_rsa.pub) | \\",
                     "    sudo -u postgres tee -a /var/lib/pgsql/.ssh/authorized_keys"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh postgres@pg-primary"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh pgbackrest@repository"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "repo1-path" : {
                           "value" : "/var/lib/pgbackrest"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg1-host" : {
                           "value" : "pg-primary"
                        },
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/9.5/data"
                        }
                     },
                     "global" : {
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-retention-full" : {
                           "value" : "2"
                        },
                        "start-fast" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/9.5/data"
                        }
                     },
                     "global" : {
                        "log-level-file" : {
                           "value" : "detail"
                        },
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-host" : {
                           "value" : "repository"
                        }
                     }
                  },
                  "reset" : true
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo stanza-create"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo check"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: no prior backup exists, incr backup has been changed to full"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "timestamp start/stop"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: none",
                     "",
                     "    db (current)",
                     "        wal archive min/max (9.5-1): 000000080000000000000022/000000080000000000000023",
                     "",
                     "        full backup: 20201005-141035F",
                     "            timestamp start/stop: 2020-10-05 14:10:35 / 2020-10-05 14:10:56",
                     "            wal start/stop: 000000080000000000000022 / 000000080000000000000022",
                     "            database size: 27.3MB, backup size: 27.3MB",
                     "            repository size: 3.2MB, repository backup size: 3.2MB",
                     "",
                     "        full backup: 20201005-141059F",
                     "            timestamp start/stop: 2020-10-05 14:10:59 / 2020-10-05 14:11:17",
                     "            wal start/stop: 000000080000000000000023 / 000000080000000000000023",
                     "            database size: 27.3MB, backup size: 27.3MB",
                     "            repository size: 3.2MB, repository backup size: 3.2MB"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "err-expect" : "56",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "\\: stop file exists for all stanzas"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-1: [StopError] raised from remote-0 protocol on 'pg-primary': stop file exists for all stanzas",
                     "P00  ERROR: [056]: unable to find primary cluster - cannot proceed"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: stop file already exists for all stanzas"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "err-expect" : "56",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "\\: stop file exists for stanza demo"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-1: [StopError] raised from remote-0 protocol on 'pg-primary': stop file exists for stanza demo",
                     "P00  ERROR: [056]: unable to find primary cluster - cannot proceed"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "pg2",
                  "image" : "pgbackrest/doc:centos6",
                  "name" : "pg-standby",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos6",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.7"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install postgresql-libs"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/log/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -m 750 -p /var/lib/pgsql/.ssh"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh-keygen -f /var/lib/pgsql/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@pg-standby cat /var/lib/pgsql/.ssh/id_rsa.pub) | \\",
                     "    sudo -u pgbackrest tee -a /home/pgbackrest/.ssh/authorized_keys"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@repository cat /home/pgbackrest/.ssh/id_rsa.pub) | \\",
                     "    sudo -u postgres tee -a /var/lib/pgsql/.ssh/authorized_keys"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh postgres@pg-standby"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh pgbackrest@repository"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/9.5/data"
                        }
                     },
                     "global" : {
                        "log-level-file" : {
                           "value" : "detail"
                        },
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-host" : {
                           "value" : "repository"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -p -m 700 /var/lib/pgsql/9.5/data"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/recovery.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:11:48",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "standby_mode = 'on'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.5/data/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "hot_standby" : {
                        "value" : "on"
                     },
                     "log_filename" : {
                        "value" : "'postgresql.log'"
                     },
                     "log_line_prefix" : {
                        "value" : "''"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "wal_level" : {
                        "value" : "hot_standby"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "hot_standby = on",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = hot_standby"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "entering standby mode|database system is ready to accept read only connections"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 14:10:59 UTC",
                     "LOG:  entering standby mode",
                     "LOG:  restored log file \"00000008.history\" from archive",
                     "LOG:  restored log file \"000000080000000000000023\" from archive",
                     "LOG:  redo starts at 0/23000028",
                     "LOG:  consistent recovery state reached at 0/23000130",
                     "LOG:  database system is ready to accept read only connections"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    begin; \\",
                     "    create table replicated_table (message text); \\",
                     "    insert into replicated_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select * from replicated_table\";"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from replicated_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"replicated_table\" does not exist",
                     "LINE 1: select * from replicated_table;",
                     "                      ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select *, current_timestamp from pg_switch_xlog()\";"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     " pg_switch_xlog |              now              ",
                     "----------------+-------------------------------",
                     " 0/2401F3D0     | 2020-10-05 14:11:56.906041+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select *, current_timestamp from replicated_table\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |              now              ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:11:58.318491+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "because this is a standby"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-host=repository --stanza=demo",
                     "P00   INFO: switch wal not performed because this is a standby",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    create user replicator password 'jw8s0F4' replication\";"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'echo \\",
                     "    \"host    replication     replicator      172.17.0.7/32           md5\" \\",
                     "    >> /var/lib/pgsql/9.5/data/pg_hba.conf'"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 reload"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "recovery-option" : {
                           "value" : "primary_conninfo=host=172.17.0.5 port=5432 user=replicator"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'echo \\",
                     "    \"172.17.0.5:*:replication:replicator:jw8s0F4\" \\",
                     "    >> /var/lib/pgsql/.pgpass'"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres chmod 600 /var/lib/pgsql/.pgpass"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/recovery.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:12:05",
                     "primary_conninfo = 'host=172.17.0.5 port=5432 user=replicator'",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "standby_mode = 'on'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.5/data/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "hot_standby" : {
                        "value" : "on"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "hot_standby = on",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = hot_standby"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 start"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/9.5/data/pg_log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "started streaming WAL from primary"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 6 lines of output]",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  restored log file \"000000080000000000000024\" from archive",
                     "LOG:  started streaming WAL from primary at 0/25000000 on timeline 8"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    begin; \\",
                     "    create table stream_table (message text); \\",
                     "    insert into stream_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select *, current_timestamp from stream_table\";"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |              now              ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:12:13.444158+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select *, current_timestamp from stream_table\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |              now              ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:12:13.848332+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 750 /var/spool/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/spool/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 750 /var/spool/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/spool/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "archive-async" : {
                           "value" : "y"
                        },
                        "spool-path" : {
                           "value" : "/var/spool/pgbackrest"
                        }
                     },
                     "global:archive-get" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     },
                     "global:archive-push" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "global" : {
                        "archive-async" : {
                           "value" : "y"
                        },
                        "spool-path" : {
                           "value" : "/var/spool/pgbackrest"
                        }
                     },
                     "global:archive-get" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     },
                     "global:archive-push" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"alter user replicator password 'bogus'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ALTER ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 restart"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres rm -f /var/log/pgbackrest/demo-archive-push-async.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_xlog(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_xlog(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_xlog(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_xlog(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_xlog();\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "WAL segment"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --repo1-host=repository --stanza=demo",
                     "P00   INFO: WAL segment 00000008000000000000002A successfully archived to '/var/lib/pgbackrest/archive/demo/9.5-1/0000000800000000/00000008000000000000002A-2c9210de9f8749acdb80340b31efecd5bd4051f9.gz'",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/pgbackrest/demo-archive-push-async.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        " WAL file\\(s\\) to archive|pushed WAL file \\'0000000"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/pgsql/9.5/data/pg_xlog] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 1 WAL file(s) to archive: 000000080000000000000025",
                     "P01 DETAIL: pushed WAL file '000000080000000000000025' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully",
                     "",
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/pgsql/9.5/data/pg_xlog] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 4 WAL file(s) to archive: 000000080000000000000026...000000080000000000000029",
                     "P01 DETAIL: pushed WAL file '000000080000000000000026' to the archive",
                     "P02 DETAIL: pushed WAL file '000000080000000000000027' to the archive",
                     "P01 DETAIL: pushed WAL file '000000080000000000000028' to the archive",
                     "P02 DETAIL: pushed WAL file '000000080000000000000029' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully",
                     "",
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/pgsql/9.5/data/pg_xlog] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 1 WAL file(s) to archive: 00000008000000000000002A",
                     "P01 DETAIL: pushed WAL file '00000008000000000000002A' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 5"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/pgbackrest/demo-archive-get-async.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "found [0-F]{24} in the archive"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-get:async command begin 2.30: [000000080000000000000023, 000000080000000000000024, 000000080000000000000025, 000000080000000000000026, 000000080000000000000027, 000000080000000000000028, 000000080000000000000029, 00000008000000000000002A] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: get 8 WAL file(s) from archive: 000000080000000000000023...00000008000000000000002A",
                     "P02 DETAIL: found 000000080000000000000024 in the archive",
                     "P01 DETAIL: found 000000080000000000000023 in the archive",
                     "P02 DETAIL: unable to find 000000080000000000000025 in the archive",
                     "P01 DETAIL: unable to find 000000080000000000000026 in the archive",
                     "       [filtered 20 lines of output]",
                     "P00   INFO: archive-get:async command begin 2.30: [000000080000000000000025, 000000080000000000000026, 000000080000000000000027, 000000080000000000000028, 000000080000000000000029, 00000008000000000000002A, 00000008000000000000002B, 00000008000000000000002C] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/9.5/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: get 8 WAL file(s) from archive: 000000080000000000000025...00000008000000000000002C",
                     "P01 DETAIL: found 000000080000000000000025 in the archive",
                     "P02 DETAIL: found 000000080000000000000026 in the archive",
                     "P01 DETAIL: found 000000080000000000000027 in the archive",
                     "P02 DETAIL: found 000000080000000000000028 in the archive",
                     "P01 DETAIL: found 000000080000000000000029 in the archive",
                     "P02 DETAIL: found 00000008000000000000002A in the archive",
                     "P01 DETAIL: unable to find 00000008000000000000002B in the archive",
                     "P02 DETAIL: unable to find 00000008000000000000002C in the archive",
                     "       [filtered 13 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"alter user replicator password 'jw8s0F4'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ALTER ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg2-host" : {
                           "value" : "pg-standby"
                        },
                        "pg2-path" : {
                           "value" : "/var/lib/pgsql/9.5/data"
                        }
                     },
                     "global" : {
                        "backup-standby" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/9.5/data",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/pgsql/9.5/data",
                     "",
                     "[global]",
                     "backup-standby=y",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --log-level-console=detail backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup file pg-primary|replay on the standby"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 2 lines of output]",
                     "P00   INFO: execute exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 00000008000000000000002C, lsn = 0/2C000028",
                     "P00   INFO: wait for replay on the standby to reach 0/2C000028",
                     "P00   INFO: replay on the standby reached 0/2C000028",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/9.5/data/global/pg_control (8KB, 0%) checksum 93fc7b490b7becf0d38b879445983c5072d55d39",
                     "P02   INFO: backup file pg-standby:/var/lib/pgsql/9.5/data/base/12378/2608 (432KB, 20%) checksum b764ce21b9f255b102994a901ddaf0070f20daf2",
                     "P04   INFO: backup file pg-standby:/var/lib/pgsql/9.5/data/base/12378/1249 (360KB, 36%) checksum d973f7722f2552191bb97a77ec7f2af76c086946",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/9.5/data/pg_log/postgresql.log (6.5KB, 37%) checksum 343874ebea30c20453c9b37d59d313e7ee14b700",
                     "P03   INFO: backup file pg-standby:/var/lib/pgsql/9.5/data/base/12378/2674 (360KB, 53%) checksum f5cd9408238348a136a5426fbad07cf970ab7c71",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/9.5/data/pg_hba.conf (4.2KB, 53%) checksum f28f3f76528c7fd372aa22474954691c6341da76",
                     "P02   INFO: backup file pg-standby:/var/lib/pgsql/9.5/data/base/12378/2673 (328KB, 69%) checksum 6554de67fbc87b622cdbe614e7b1f01b44e345e6",
                     "P04   INFO: backup file pg-standby:/var/lib/pgsql/9.5/data/base/12378/2658 (112KB, 74%) checksum d9966832c4f57201b9d85d424f855cd1af2b5247",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/9.5/data/backup_label (248B, 74%) checksum b632a0168bdf9da15552865ae9ea10456af2859b",
                     "P03   INFO: backup file pg-standby:/var/lib/pgsql/9.5/data/base/12378/1259 (104KB, 78%) checksum 233eede0f1859efea230d419f25793b3060c0f60",
                     "P03   INFO: backup file pg-standby:/var/lib/pgsql/9.5/data/base/12378/2704 (40KB, 80%) checksum def076d1c194c3f71a460a371602ab157b2d8de8",
                     "       [filtered 1125 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.5 stop"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres /usr/pgsql-9.6/bin/initdb \\",
                     "    -D /var/lib/pgsql/9.6/data -k -A peer"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'cd /var/lib/pgsql && \\",
                     "    /usr/pgsql-9.6/bin/pg_upgrade \\",
                     "    --old-bindir=/usr/pgsql-9.5/bin \\",
                     "    --new-bindir=/usr/pgsql-9.6/bin \\",
                     "    --old-datadir=/var/lib/pgsql/9.5/data \\",
                     "    --new-datadir=/var/lib/pgsql/9.6/data \\",
                     "    --old-options=\" -c config_file=/var/lib/pgsql/9.5/data/postgresql.conf\" \\",
                     "    --new-options=\" -c config_file=/var/lib/pgsql/9.6/data/postgresql.conf\"'"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Upgrade Complete"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 69 lines of output]",
                     "Creating script to delete old cluster                       ok",
                     "",
                     "Upgrade Complete",
                     "----------------",
                     "Optimizer statistics are not transferred by pg_upgrade so,",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.6/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "listen_addresses" : {
                        "value" : "'*'"
                     },
                     "log_line_prefix" : {
                        "value" : "''"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "port" : {
                        "value" : "5432"
                     },
                     "wal_level" : {
                        "value" : "hot_standby"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "listen_addresses = '*'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "port = 5432",
                     "wal_level = hot_standby"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/9.6/data"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.6/data",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/9.6/data"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/9.6/data",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/9.6/data"
                        },
                        "pg2-path" : {
                           "value" : "/var/lib/pgsql/9.6/data"
                        }
                     },
                     "global" : {
                        "backup-standby" : {
                           "value" : "n"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/9.6/data",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/pgsql/9.6/data",
                     "",
                     "[global]",
                     "backup-standby=n",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo cp /var/lib/pgsql/9.5/data/pg_hba.conf \\",
                     "    /var/lib/pgsql/9.6/data/pg_hba.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --no-online \\",
                     "    --log-level-console=info stanza-upgrade"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-upgrade command begin 2.30: --no-backup-standby --log-level-console=info --log-level-stderr=off --no-log-timestamp --no-online --pg1-host=pg-primary --pg2-host=pg-standby --pg1-path=/var/lib/pgsql/9.6/data --pg2-path=/var/lib/pgsql/9.6/data --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: stanza-upgrade command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.6 start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "Starting postgresql-9.6 service: [  OK  ]\r"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres service postgresql-9.6 status"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "postgresql-9.6 (pid  4988) is running..."
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm -rf /var/lib/pgsql/9.5/data"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm -rf /var/lib/pgsql/9.5/data"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -p -m 700 /usr/pgsql-9.6/bin"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo check"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-2: [DbConnectError] raised from remote-0 protocol on 'pg-standby': unable to connect to 'dbname='postgres' port=5432': could not connect to server: No such file or directory",
                     "            \tIs the server running locally and accepting",
                     "            \tconnections on Unix domain socket \"/var/run/postgresql/.s.PGSQL.5432\"?"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/9.6/data/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "hot_standby" : {
                        "value" : "on"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "hot_standby = on"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo service postgresql-9.6 start"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "backup-standby" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/9.6/data",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/pgsql/9.6/data",
                     "",
                     "[global]",
                     "backup-standby=y",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            }
         ]
      }
   },
   "{\"os-type\":\"centos7\"}" : {
      "all" : {
         "user-guide" : [
            {
               "key" : {
                  "id" : "azure",
                  "image" : "mcr.microsoft.com/azure-storage/azurite",
                  "name" : "azure-server",
                  "option" : "-v {[host-repo-path]}/doc/resource/fake-cert/azure-server.crt:/root/public.crt:ro -v {[host-repo-path]}/doc/resource/fake-cert/azure-server.key:/root/private.key:ro -e AZURITE_ACCOUNTS='pgbackrest:YXpLZXk='",
                  "os" : "centos7",
                  "param" : "azurite-blob --blobPort 443 --blobHost 0.0.0.0 --cert=/root/public.crt --key=/root/private.key",
                  "update-hosts" : false
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.2"
               }
            },
            {
               "key" : {
                  "id" : "s3",
                  "image" : "minio/minio:RELEASE.2020-05-06T23-23-25Z",
                  "name" : "s3-server",
                  "option" : "-v {[host-repo-path]}/doc/resource/fake-cert/s3-server.crt:/root/.minio/certs/public.crt:ro -v {[host-repo-path]}/doc/resource/fake-cert/s3-server.key:/root/.minio/certs/private.key:ro -e MINIO_REGION=us-east-1 -e MINIO_DOMAIN=s3.us-east-1.amazonaws.com -e MINIO_BROWSER=off -e MINIO_ACCESS_KEY=accessKey1 -e MINIO_SECRET_KEY=verySecretKey1",
                  "os" : "centos7",
                  "param" : "server /data --address :443",
                  "update-hosts" : false
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.3"
               }
            },
            {
               "key" : {
                  "id" : "build",
                  "image" : "pgbackrest/doc:centos7",
                  "name" : "build",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos7",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.4"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo cp -r /pgbackrest/src /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown -R vagrant /build/pgbackrest-release-2.30"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install make gcc postgresql-devel openssl-devel libxml2-devel \\",
                     "    lz4-devel libzstd-devel bzip2-devel"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "cd /build/pgbackrest-release-2.30/src && ./configure && make"
                  ],
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "pg1",
                  "image" : "pgbackrest/doc:centos7",
                  "name" : "pg-primary",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos7",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.5"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install postgresql-libs"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/log/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "pgBackRest 2.30 - General help",
                     "",
                     "Usage:",
                     "    pgbackrest [options] [command]",
                     "",
                     "Commands:",
                     "    archive-get     Get a WAL segment from the archive.",
                     "    archive-push    Push a WAL segment to the archive.",
                     "    backup          Backup a database cluster.",
                     "    check           Check the configuration.",
                     "    expire          Expire backups that exceed retention.",
                     "    help            Get help.",
                     "    info            Retrieve information about backups.",
                     "    restore         Restore a database cluster.",
                     "    stanza-create   Create the required stanza data.",
                     "    stanza-delete   Delete a stanza.",
                     "    stanza-upgrade  Upgrade a stanza.",
                     "    start           Allow pgBackRest processes to run.",
                     "    stop            Stop pgBackRest processes from running.",
                     "    version         Get version.",
                     "",
                     "Use 'pgbackrest help [command]' for more information."
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres /usr/pgsql-10/bin/initdb \\",
                     "    -D /var/lib/pgsql/10/data -k -A peer"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/10/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "listen_addresses" : {
                        "value" : "'*'"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/10/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "log_line_prefix" : {
                        "value" : "''"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'",
                     "log_line_prefix = ''"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/10/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "log_filename" : {
                        "value" : "'postgresql.log'"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "listen_addresses = '*'",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/10/data"
                        }
                     },
                     "global" : {
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres bash -c ' \\",
                     "    export PGBACKREST_LOG_PATH=/path/set/by/env && \\",
                     "    pgbackrest --log-level-console=error help backup log-path'"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "current\\: \\/path\\/set\\/by\\/env"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "pgBackRest 2.30 - 'backup' command - 'log-path' option help",
                     "",
                     "Path where log files are stored.",
                     "",
                     "The log path provides a location for pgBackRest to store log files. Note that",
                     "if log-level-file=off then no log path is required.",
                     "",
                     "current: /path/set/by/env",
                     "default: /var/log/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 750 /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/lib/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-path" : {
                           "value" : "/var/lib/pgbackrest"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/10/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "wal_level" : {
                        "value" : "replica"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "listen_addresses = '*'",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = replica"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl restart postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global:archive-push" : {
                        "compress-level" : {
                           "value" : "3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-full" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-cipher-pass" : {
                           "value" : "zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO"
                        },
                        "repo1-cipher-type" : {
                           "value" : "aes-256-cbc"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        " successfully archived to "
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: WAL segment 000000010000000000000001 successfully archived to '/var/lib/pgbackrest/archive/demo/10-1/0000000100000000/000000010000000000000001-2b32646e8d69d00d6def1573d497e4085cbf9d42.gz'",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the next regular checkpoint completes",
                     "P00   INFO: backup start archive = 000000010000000000000002, lsn = 0/2000028",
                     "       [filtered 946 lines of output]",
                     "P01   INFO: backup file /var/lib/pgsql/10/data/base/1/12795 (0B, 100%)",
                     "P01   INFO: backup file /var/lib/pgsql/10/data/base/1/12790 (0B, 100%)",
                     "P00   INFO: full backup size = 22.4MB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000010000000000000002, lsn = 0/2000130",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-135453F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "diff backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 4 lines of output]",
                     "P01   INFO: backup file /var/lib/pgsql/10/data/global/pg_control (8KB, 99%) checksum 952daab5d63454827489634e867e56910c60c2c0",
                     "P01   INFO: backup file /var/lib/pgsql/10/data/pg_logical/replorigin_checkpoint (8B, 100%) checksum 347fc8f2df71bd4436e38bd1516ccd7ea0d46532",
                     "P00   INFO: diff backup size = 8KB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000010000000000000004, lsn = 0/40000F8",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "(full|incr|diff) backup"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: aes-256-cbc",
                     "",
                     "    db (current)",
                     "        wal archive min/max (10-1): 000000010000000000000001/000000010000000000000004",
                     "",
                     "        full backup: 20201005-135453F",
                     "            timestamp start/stop: 2020-10-05 13:54:53 / 2020-10-05 13:55:13",
                     "            wal start/stop: 000000010000000000000002 / 000000010000000000000002",
                     "            database size: 22.4MB, backup size: 22.4MB",
                     "            repository size: 2.7MB, repository backup size: 2.7MB",
                     "",
                     "        diff backup: 20201005-135453F_20201005-135514D",
                     "            timestamp start/stop: 2020-10-05 13:55:14 / 2020-10-05 13:55:17",
                     "            wal start/stop: 000000010000000000000004 / 000000010000000000000004",
                     "            database size: 22.4MB, backup size: 8.2KB",
                     "            repository size: 2.7MB, repository backup size: 496B",
                     "            backup reference list: 20201005-135453F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres rm /var/lib/pgsql/10/data/global/pg_control"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "err-expect" : "1",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl status postgresql-10.service"
                  ],
                  "err-expect" : "3",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Failed to start PostgreSQL"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 11 lines of output]",
                     "Oct 05 13:55:19 pg-primary postmaster[847]: but could not open file \"/var/lib/pgsql/10/data/global/pg_control\": No such file or directory",
                     "Oct 05 13:55:19 pg-primary systemd[1]: postgresql-10.service: main process exited, code=exited, status=2/INVALIDARGUMENT",
                     "Oct 05 13:55:19 pg-primary systemd[1]: Failed to start PostgreSQL 10 database server.",
                     "Oct 05 13:55:19 pg-primary systemd[1]: Unit postgresql-10.service entered failed state.",
                     "Oct 05 13:55:19 pg-primary systemd[1]: postgresql-10.service failed."
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres find /var/lib/pgsql/10/data -mindepth 1 -delete"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup begins after the next regular checkpoint completes"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --type=incr",
                     "P00   INFO: last backup label = 20201005-135453F_20201005-135514D, version = 2.30",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the next regular checkpoint completes",
                     "P00   INFO: backup start archive = 000000020000000000000006, lsn = 0/6000028",
                     "P00   WARN: a timeline switch has occurred since the 20201005-135453F_20201005-135514D backup, enabling delta checksum",
                     "       [filtered 10 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "start-fast" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup begins after the requested immediate checkpoint completes"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo --start-fast --type=incr",
                     "P00   INFO: last backup label = 20201005-135453F_20201005-135536I, version = 2.30",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000020000000000000007, lsn = 0/7000028",
                     "P01   INFO: backup file /var/lib/pgsql/10/data/global/pg_control (8KB, 99%) checksum 2c9b60ccc93d66b82ce22b9dc5e0d3ac267d0d5e",
                     "       [filtered 8 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -p /var/lib/pgsql/pgbackrest/doc/example"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cp -r /pgbackrest/doc/example/* \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-info.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-- An example of monitoring pgBackRest from within PostgreSQL",
                     "--",
                     "-- Use copy to export data from the pgBackRest info command into the jsonb",
                     "-- type so it can be queried directly by PostgreSQL.",
                     "",
                     "-- Create monitor schema",
                     "create schema monitor;",
                     "",
                     "-- Get pgBackRest info in JSON format",
                     "create function monitor.pgbackrest_info()",
                     "    returns jsonb AS $$",
                     "declare",
                     "    data jsonb;",
                     "begin",
                     "    -- Create a temp table to hold the JSON data",
                     "    create temp table temp_pgbackrest_data (data jsonb);",
                     "",
                     "    -- Copy data into the table directly from the pgBackRest info command",
                     "    copy temp_pgbackrest_data (data)",
                     "        from program",
                     "            'pgbackrest --output=json info' (format text);",
                     "",
                     "    select temp_pgbackrest_data.data",
                     "      into data",
                     "      from temp_pgbackrest_data;",
                     "",
                     "    drop table temp_pgbackrest_data;",
                     "",
                     "    return data;",
                     "end $$ language plpgsql;"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -f \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-info.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-query.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-- Get last successful backup for each stanza",
                     "--",
                     "-- Requires the monitor.pgbackrest_info function.",
                     "with stanza as",
                     "(",
                     "    select data->'name' as name,",
                     "           data->'backup'->(",
                     "               jsonb_array_length(data->'backup') - 1) as last_backup,",
                     "           data->'archive'->(",
                     "               jsonb_array_length(data->'archive') - 1) as current_archive",
                     "      from jsonb_array_elements(monitor.pgbackrest_info()) as data",
                     ")",
                     "select name,",
                     "       to_timestamp(",
                     "           (last_backup->'timestamp'->>'stop')::numeric) as last_successful_backup,",
                     "       current_archive->>'max' as last_archived_wal",
                     "  from stanza;"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -f \\",
                     "    /var/lib/pgsql/pgbackrest/doc/example/pgsql-pgbackrest-query.sql"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "  name  | last_successful_backup |    last_archived_wal     ",
                     "--------+------------------------+--------------------------",
                     " \"demo\" | 2020-10-05 13:55:42+00 | 000000020000000000000007",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-full" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=full \\",
                     "    --log-level-console=detail backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "archive retention on backup 20201005-135453F|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 957 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=detail --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00 DETAIL: archive retention on backup 20201005-135453F, archiveId = 10-1, start = 000000010000000000000002",
                     "P00 DETAIL: remove archive: archiveId = 10-1, start = 000000010000000000000001, stop = 000000010000000000000001",
                     "P00   INFO: expire command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-135547F"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=full \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "expire full backup set\\: 20201005-135453F|archive retention on backup 20201005-135547F|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 956 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-full=2 --stanza=demo",
                     "P00   INFO: expire full backup set: 20201005-135453F, 20201005-135453F_20201005-135514D, 20201005-135453F_20201005-135536I, 20201005-135453F_20201005-135540I",
                     "P00   INFO: remove expired backup 20201005-135453F_20201005-135540I",
                     "P00   INFO: remove expired backup 20201005-135453F_20201005-135536I",
                     "       [filtered 2 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-diff" : {
                           "value" : "1"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-diff=1",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-135603F_20201005-135622D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "expire diff backup set: 20201005-135603F_20201005-135622D"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 11 lines of output]",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-diff=1 --repo1-retention-full=2 --stanza=demo",
                     "P00   INFO: expire diff backup set: 20201005-135603F_20201005-135622D, 20201005-135603F_20201005-135625I",
                     "P00   INFO: remove expired backup 20201005-135603F_20201005-135625I",
                     "P00   INFO: remove expired backup 20201005-135603F_20201005-135622D"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "repo1-retention-diff" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-135603F_20201005-135628D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select pg_create_restore_point('generate WAL'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('generate WAL'); select pg_switch_wal();\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "new backup label"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 10 lines of output]",
                     "P00   INFO: backup stop archive = 000000020000000000000012, lsn = 0/120000F8",
                     "P00   INFO: check archive for segment(s) 000000020000000000000012:000000020000000000000012",
                     "P00   INFO: new backup label = 20201005-135603F_20201005-135633D",
                     "P00   INFO: backup command end: completed successfully",
                     "P00   INFO: expire command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-diff=2 --repo1-retention-full=2 --stanza=demo"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-135603F_20201005-135633D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=detail \\",
                     "    --repo1-retention-archive-type=diff --repo1-retention-archive=1 expire"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "archive retention on backup 20201005-135603F_20201005-135628D|remove archive"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: expire command begin 2.30: --log-level-console=detail --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --repo1-retention-archive=1 --repo1-retention-archive-type=diff --repo1-retention-diff=2 --repo1-retention-full=2 --stanza=demo",
                     "P00 DETAIL: archive retention on backup 20201005-135547F, archiveId = 10-1, start = 000000020000000000000009, stop = 000000020000000000000009",
                     "P00 DETAIL: archive retention on backup 20201005-135603F, archiveId = 10-1, start = 00000002000000000000000B, stop = 00000002000000000000000B",
                     "P00 DETAIL: archive retention on backup 20201005-135603F_20201005-135628D, archiveId = 10-1, start = 00000002000000000000000E, stop = 00000002000000000000000E",
                     "P00 DETAIL: archive retention on backup 20201005-135603F_20201005-135633D, archiveId = 10-1, start = 000000020000000000000012",
                     "P00 DETAIL: remove archive: archiveId = 10-1, start = 00000002000000000000000A, stop = 00000002000000000000000A",
                     "P00 DETAIL: remove archive: archiveId = 10-1, start = 00000002000000000000000C, stop = 00000002000000000000000D",
                     "P00 DETAIL: remove archive: archiveId = 10-1, start = 00000002000000000000000F, stop = 000000020000000000000011",
                     "P00   INFO: expire command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --log-level-console=detail restore"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "demo\\/PG_VERSION - exists and matches backup|remove invalid files|rename global\\/pg_control"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 2 lines of output]",
                     "P00 DETAIL: check '/var/lib/pgsql/10/data' exists",
                     "P00 DETAIL: remove 'global/pg_control' so cluster will not start if restore does not complete",
                     "P00   INFO: remove invalid files/links/paths from '/var/lib/pgsql/10/data'",
                     "P00 DETAIL: remove invalid file '/var/lib/pgsql/10/data/backup_label.old'",
                     "P00 DETAIL: remove invalid file '/var/lib/pgsql/10/data/base/12953/pg_internal.init'",
                     "       [filtered 997 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create database test1;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create database test2;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create table test1_table (id int); \\",
                     "    insert into test1_table (id) values (1);\" test1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "INSERT 0 1"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"create table test2_table (id int); \\",
                     "    insert into test2_table (id) values (2);\" test2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "INSERT 0 1"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -Atc \"select oid from pg_database where datname = 'test1'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres du -sh /var/lib/pgsql/10/data/base/24576"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "7.5M\t/var/lib/pgsql/10/data/base/24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-135603F_20201005-135644I"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --set=20201005-135603F_20201005-135644I info"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "database list"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 11 lines of output]",
                     "            repository size: 4.4MB, repository backup size: 1.8MB",
                     "            backup reference list: 20201005-135603F, 20201005-135603F_20201005-135633D",
                     "            database list: postgres (12953), test1 (24576), test2 (24577)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --db-include=test2 restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from test2_table;\" test2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     " id ",
                     "----",
                     "  2",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from test1_table;\" test1"
                  ],
                  "err-expect" : "2",
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "relation mapping file.*contains invalid data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "psql: FATAL:  relation mapping file \"base/24576/pg_filenode.map\" contains invalid data"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres du -sh /var/lib/pgsql/10/data/base/24576"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "176K\t/var/lib/pgsql/10/data/base/24576"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"drop database test1;\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "DROP DATABASE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select oid, datname from pg_database order by oid;\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "test2"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "  oid  |  datname  ",
                     "-------+-----------",
                     "     1 | template1",
                     " 12952 | template0",
                     " 12953 | postgres",
                     " 24577 | test2",
                     "(4 rows)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=diff backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    create table important_table (message text); \\",
                     "    insert into important_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -Atc \"select current_timestamp\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "2020-10-05 13:57:12.347362+00"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    drop table important_table; \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: ...le important_table;     commit;     select * from important_...",
                     "                                                             ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --type=time \"--target=2020-10-05 13:57:12.347362+00\" \\",
                     "    --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/recovery.conf"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery_target_time"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 13:57:16",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "recovery_target_time = '2020-10-05 13:57:12.347362+00'",
                     "recovery_target_action = 'promote'"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery stopping before|last completed transaction|starting point-in-time recovery"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 13:57:05 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 13:57:12.347362+00",
                     "LOG:  restored log file \"00000004.history\" from archive",
                     "LOG:  restored log file \"000000040000000000000017\" from archive",
                     "       [filtered 2 lines of output]",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  restored log file \"000000040000000000000018\" from archive",
                     "LOG:  recovery stopping before commit of transaction 564, time 2020-10-05 13:57:13.927793+00",
                     "LOG:  redo done at 0/18021458",
                     "LOG:  last completed transaction was at log time 2020-10-05 13:57:10.743451+00",
                     "LOG:  selected new timeline ID: 5",
                     "LOG:  archive recovery complete",
                     "LOG:  database system is ready to accept connections"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"begin; \\",
                     "    drop table important_table; \\",
                     "    commit; \\",
                     "    select * from important_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: ...le important_table;     commit;     select * from important_...",
                     "                                                             ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=incr backup"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-ls backup/demo --filter=\"(F|D|I)$\" --sort=desc | head -1"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "20201005-135603F_20201005-135723I"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "20201005-135603F_20201005-135723I"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: aes-256-cbc",
                     "",
                     "    db (current)",
                     "        wal archive min/max (10-1): 000000020000000000000009/000000050000000000000019",
                     "",
                     "        full backup: 20201005-135547F",
                     "            timestamp start/stop: 2020-10-05 13:55:47 / 2020-10-05 13:56:01",
                     "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
                     "            database size: 22.4MB, backup size: 22.4MB",
                     "            repository size: 2.7MB, repository backup size: 2.7MB",
                     "",
                     "        full backup: 20201005-135603F",
                     "            timestamp start/stop: 2020-10-05 13:56:03 / 2020-10-05 13:56:19",
                     "            wal start/stop: 00000002000000000000000B / 00000002000000000000000B",
                     "            database size: 22.4MB, backup size: 22.4MB",
                     "            repository size: 2.7MB, repository backup size: 2.7MB",
                     "",
                     "        diff backup: 20201005-135603F_20201005-135633D",
                     "            timestamp start/stop: 2020-10-05 13:56:33 / 2020-10-05 13:56:35",
                     "            wal start/stop: 000000020000000000000012 / 000000020000000000000012",
                     "            database size: 22.4MB, backup size: 97.5KB",
                     "            repository size: 2.7MB, repository backup size: 12.4KB",
                     "            backup reference list: 20201005-135603F",
                     "",
                     "        incr backup: 20201005-135603F_20201005-135644I",
                     "            timestamp start/stop: 2020-10-05 13:56:44 / 2020-10-05 13:56:54",
                     "            wal start/stop: 000000030000000000000014 / 000000030000000000000014",
                     "            database size: 37MB, backup size: 15.0MB",
                     "            repository size: 4.4MB, repository backup size: 1.8MB",
                     "            backup reference list: 20201005-135603F, 20201005-135603F_20201005-135633D",
                     "",
                     "        diff backup: 20201005-135603F_20201005-135704D",
                     "            timestamp start/stop: 2020-10-05 13:57:04 / 2020-10-05 13:57:10",
                     "            wal start/stop: 000000040000000000000017 / 000000040000000000000017",
                     "            database size: 29.7MB, backup size: 7.8MB",
                     "            repository size: 3.5MB, repository backup size: 946.3KB",
                     "            backup reference list: 20201005-135603F",
                     "",
                     "        incr backup: 20201005-135603F_20201005-135723I",
                     "            timestamp start/stop: 2020-10-05 13:57:23 / 2020-10-05 13:57:24",
                     "            wal start/stop: 000000050000000000000019 / 000000050000000000000019",
                     "            database size: 29.7MB, backup size: 2MB",
                     "            repository size: 3.5MB, repository backup size: 219.0KB",
                     "            backup reference list: 20201005-135603F, 20201005-135603F_20201005-135704D"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --set=20201005-135603F_20201005-135723I \\",
                     "    --type=time \"--target=2020-10-05 13:57:12.347362+00\" --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"important_table\" does not exist",
                     "LINE 1: select * from important_table",
                     "                      ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "starting point-in-time recovery|consistent recovery state reached"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 13:57:23 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 13:57:12.347362+00",
                     "LOG:  restored log file \"00000005.history\" from archive",
                     "LOG:  restored log file \"000000050000000000000019\" from archive",
                     "LOG:  redo starts at 0/19000028",
                     "LOG:  consistent recovery state reached at 0/190000F8",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  redo done at 0/190000F8",
                     "       [filtered 6 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta \\",
                     "    --type=time \"--target=2020-10-05 13:57:12.347362+00\" \\",
                     "    --target-action=promote restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from important_table\""
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "recovery stopping before|last completed transaction|starting point-in-time recovery"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 13:57:05 UTC",
                     "LOG:  starting point-in-time recovery to 2020-10-05 13:57:12.347362+00",
                     "LOG:  restored log file \"00000004.history\" from archive",
                     "LOG:  restored log file \"000000040000000000000017\" from archive",
                     "       [filtered 2 lines of output]",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  restored log file \"000000040000000000000018\" from archive",
                     "LOG:  recovery stopping before commit of transaction 564, time 2020-10-05 13:57:13.927793+00",
                     "LOG:  redo done at 0/18021458",
                     "LOG:  last completed transaction was at log time 2020-10-05 13:57:10.743451+00",
                     "LOG:  restored log file \"00000005.history\" from archive",
                     "LOG:  restored log file \"00000006.history\" from archive",
                     "       [filtered 3 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "4"
                        },
                        "repo1-azure-account" : {
                           "value" : "pgbackrest"
                        },
                        "repo1-azure-container" : {
                           "value" : "demo-container"
                        },
                        "repo1-azure-host" : {
                           "value" : "blob.core.windows.net"
                        },
                        "repo1-azure-key" : {
                           "value" : "YXpLZXk="
                        },
                        "repo1-path" : {
                           "value" : "/demo-repo"
                        },
                        "repo1-type" : {
                           "value" : "azure"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "process-max=4",
                     "repo1-azure-account=pgbackrest",
                     "repo1-azure-container=demo-container",
                     "repo1-azure-key=YXpLZXk=",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/demo-repo",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "repo1-type=azure",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "echo \"172.17.0.2 blob.core.windows.net\" | tee -a /etc/hosts"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-create"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-azure-account=<redacted> --repo1-azure-container=demo-container --repo1-azure-host=blob.core.windows.net --repo1-azure-key=<redacted> --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-type=azure --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --process-max=4 --repo1-azure-account=<redacted> --repo1-azure-container=demo-container --repo1-azure-host=blob.core.windows.net --repo1-azure-key=<redacted> --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-type=azure --stanza=demo --start-fast",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 000000070000000000000019, lsn = 0/19000028",
                     "       [filtered 1243 lines of output]",
                     "P03   INFO: backup file /var/lib/pgsql/10/data/base/1/12795 (0B, 100%)",
                     "P01   INFO: backup file /var/lib/pgsql/10/data/base/1/12790 (0B, 100%)",
                     "P00   INFO: full backup size = 29.7MB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 000000070000000000000019, lsn = 0/19000130",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "4"
                        },
                        "repo1-path" : {
                           "value" : "/demo-repo"
                        },
                        "repo1-s3-bucket" : {
                           "value" : "demo-bucket"
                        },
                        "repo1-s3-endpoint" : {
                           "value" : "s3.us-east-1.amazonaws.com"
                        },
                        "repo1-s3-key" : {
                           "value" : "accessKey1"
                        },
                        "repo1-s3-key-secret" : {
                           "value" : "verySecretKey1"
                        },
                        "repo1-s3-region" : {
                           "value" : "us-east-1"
                        },
                        "repo1-type" : {
                           "value" : "s3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "process-max=4",
                     "repo1-azure-account=pgbackrest",
                     "repo1-azure-container=demo-container",
                     "repo1-azure-key=YXpLZXk=",
                     "repo1-cipher-pass=zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO",
                     "repo1-cipher-type=aes-256-cbc",
                     "repo1-path=/demo-repo",
                     "repo1-retention-diff=2",
                     "repo1-retention-full=2",
                     "repo1-s3-bucket=demo-bucket",
                     "repo1-s3-endpoint=s3.us-east-1.amazonaws.com",
                     "repo1-s3-key=accessKey1",
                     "repo1-s3-key-secret=verySecretKey1",
                     "repo1-s3-region=us-east-1",
                     "repo1-type=s3",
                     "start-fast=y",
                     "",
                     "[global:archive-push]",
                     "compress-level=3"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "echo \"172.17.0.3 demo-bucket.s3.us-east-1.amazonaws.com s3.us-east-1.amazonaws.com\" | tee -a /etc/hosts"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest repo-create"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-create"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-create command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stanza-create command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo \\",
                     "    --log-level-console=info backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "no prior backup exists|full backup size"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: backup command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --process-max=4 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo --start-fast",
                     "P00   WARN: no prior backup exists, incr backup has been changed to full",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 00000007000000000000001A, lsn = 0/1A000028",
                     "       [filtered 1243 lines of output]",
                     "P03   INFO: backup file /var/lib/pgsql/10/data/base/1/12795 (0B, 100%)",
                     "P04   INFO: backup file /var/lib/pgsql/10/data/base/1/12790 (0B, 100%)",
                     "P00   INFO: full backup size = 29.7MB",
                     "P00   INFO: execute non-exclusive pg_stop_backup() and wait for all WAL segments to archive",
                     "P00   INFO: backup stop archive = 00000007000000000000001A, lsn = 0/1A0000F8",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stop"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stop command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stop command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info stanza-delete"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-delete command begin 2.30: --log-level-console=info --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/demo-repo --repo1-s3-bucket=demo-bucket --repo1-s3-endpoint=s3.us-east-1.amazonaws.com --repo1-s3-key=<redacted> --repo1-s3-key-secret=<redacted> --repo1-s3-region=us-east-1 --repo1-type=s3 --stanza=demo",
                     "P00   INFO: stanza-delete command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "repo1",
                  "image" : "pgbackrest/doc:centos7",
                  "name" : "repository",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos7",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.6"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo groupadd pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo adduser -gpgbackrest -n pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install postgresql-libs"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /var/log/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 750 /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown pgbackrest:pgbackrest /var/lib/pgbackrest"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest mkdir -m 750 /home/pgbackrest/.ssh"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh-keygen -f /home/pgbackrest/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -m 750 -p /var/lib/pgsql/.ssh"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh-keygen -f /var/lib/pgsql/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@pg-primary cat /var/lib/pgsql/.ssh/id_rsa.pub) | \\",
                     "    sudo -u pgbackrest tee -a /home/pgbackrest/.ssh/authorized_keys"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@repository cat /home/pgbackrest/.ssh/id_rsa.pub) | \\",
                     "    sudo -u postgres tee -a /var/lib/pgsql/.ssh/authorized_keys"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh postgres@pg-primary"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh pgbackrest@repository"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "repo1-path" : {
                           "value" : "/var/lib/pgbackrest"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg1-host" : {
                           "value" : "pg-primary"
                        },
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/10/data"
                        }
                     },
                     "global" : {
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-retention-full" : {
                           "value" : "2"
                        },
                        "start-fast" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/10/data"
                        }
                     },
                     "global" : {
                        "log-level-file" : {
                           "value" : "detail"
                        },
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-host" : {
                           "value" : "repository"
                        }
                     }
                  },
                  "reset" : true
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo stanza-create"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo check"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: no prior backup exists, incr backup has been changed to full"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta restore"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "process-max" : {
                           "value" : "3"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest info"
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "timestamp start/stop"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "stanza: demo",
                     "    status: ok",
                     "    cipher: none",
                     "",
                     "    db (current)",
                     "        wal archive min/max (10-1): 000000080000000000000020/000000080000000000000021",
                     "",
                     "        full backup: 20201005-135908F",
                     "            timestamp start/stop: 2020-10-05 13:59:08 / 2020-10-05 13:59:27",
                     "            wal start/stop: 000000080000000000000020 / 000000080000000000000020",
                     "            database size: 29.8MB, backup size: 29.8MB",
                     "            repository size: 3.5MB, repository backup size: 3.5MB",
                     "",
                     "        full backup: 20201005-135931F",
                     "            timestamp start/stop: 2020-10-05 13:59:31 / 2020-10-05 13:59:41",
                     "            wal start/stop: 000000080000000000000021 / 000000080000000000000021",
                     "            database size: 29.8MB, backup size: 29.8MB",
                     "            repository size: 3.5MB, repository backup size: 3.5MB"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "err-expect" : "56",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "\\: stop file exists for all stanzas"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-1: [StopError] raised from remote-0 protocol on 'pg-primary': stop file exists for all stanzas",
                     "P00  ERROR: [056]: unable to find primary cluster - cannot proceed"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: stop file already exists for all stanzas"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo stop"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo backup"
                  ],
                  "err-expect" : "56",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "\\: stop file exists for stanza demo"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-1: [StopError] raised from remote-0 protocol on 'pg-primary': stop file exists for stanza demo",
                     "P00  ERROR: [056]: unable to find primary cluster - cannot proceed"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo start"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "id" : "pg2",
                  "image" : "pgbackrest/doc:centos7",
                  "name" : "pg-standby",
                  "option" : "-v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /tmp/$(mktemp -d):/run",
                  "os" : "centos7",
                  "update-hosts" : true
               },
               "type" : "host",
               "value" : {
                  "ip" : "172.17.0.7"
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo yum install postgresql-libs"
                  ],
                  "cmd-extra" : "-y 2>&1",
                  "host" : "build",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo scp build:/build/pgbackrest-release-2.30/src/pgbackrest /usr/bin"
                  ],
                  "cmd-extra" : "2>&1",
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 755 /usr/bin/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 770 /var/log/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/log/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p /etc/pgbackrest/conf.d"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo touch /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chmod 640 /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -m 750 -p /var/lib/pgsql/.ssh"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh-keygen -f /var/lib/pgsql/.ssh/id_rsa \\",
                     "    -t rsa -b 4096 -N \"\""
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@pg-standby cat /var/lib/pgsql/.ssh/id_rsa.pub) | \\",
                     "    sudo -u pgbackrest tee -a /home/pgbackrest/.ssh/authorized_keys"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "(echo -n 'no-agent-forwarding,no-X11-forwarding,no-port-forwarding,' && \\",
                     "    echo -n 'command=\"/usr/bin/pgbackrest ${SSH_ORIGINAL_COMMAND#* }\" ' && \\",
                     "    sudo ssh root@repository cat /home/pgbackrest/.ssh/id_rsa.pub) | \\",
                     "    sudo -u postgres tee -a /var/lib/pgsql/.ssh/authorized_keys"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : "root"
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest ssh postgres@pg-standby"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres ssh pgbackrest@repository"
                  ],
                  "cmd-extra" : "-o StrictHostKeyChecking=no",
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/10/data"
                        }
                     },
                     "global" : {
                        "log-level-file" : {
                           "value" : "detail"
                        },
                        "log-level-stderr" : {
                           "value" : "off"
                        },
                        "log-timestamp" : {
                           "value" : "n"
                        },
                        "repo1-host" : {
                           "value" : "repository"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -p -m 700 /var/lib/pgsql/10/data"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/recovery.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:00:15",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "standby_mode = 'on'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/10/data/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "hot_standby" : {
                        "value" : "on"
                     },
                     "log_filename" : {
                        "value" : "'postgresql.log'"
                     },
                     "log_line_prefix" : {
                        "value" : "''"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "wal_level" : {
                        "value" : "replica"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "hot_standby = on",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = replica"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "entering standby mode|database system is ready to accept read only connections"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "LOG:  database system was interrupted; last known up at 2020-10-05 13:59:31 UTC",
                     "LOG:  entering standby mode",
                     "LOG:  restored log file \"00000008.history\" from archive",
                     "LOG:  restored log file \"000000080000000000000021\" from archive",
                     "LOG:  redo starts at 0/21000028",
                     "LOG:  consistent recovery state reached at 0/21000130",
                     "LOG:  database system is ready to accept read only connections"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    begin; \\",
                     "    create table replicated_table (message text); \\",
                     "    insert into replicated_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select * from replicated_table\";"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     ",
                     "----------------",
                     " Important Data",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select * from replicated_table;\""
                  ],
                  "err-expect" : "1",
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "does not exist"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ERROR:  relation \"replicated_table\" does not exist",
                     "LINE 1: select * from replicated_table;",
                     "                      ^"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"select *, current_timestamp from pg_switch_wal()\";"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     " pg_switch_wal |       current_timestamp       ",
                     "---------------+-------------------------------",
                     " 0/2202B608    | 2020-10-05 14:00:23.808015+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select *, current_timestamp from replicated_table\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |       current_timestamp       ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:00:26.268767+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "because this is a standby"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-host=repository --stanza=demo",
                     "P00   INFO: switch wal not performed because this is a standby",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    create user replicator password 'jw8s0F4' replication\";"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "CREATE ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'echo \\",
                     "    \"host    replication     replicator      172.17.0.7/32           md5\" \\",
                     "    >> /var/lib/pgsql/10/data/pg_hba.conf'"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl reload postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "recovery-option" : {
                           "value" : "primary_conninfo=host=172.17.0.5 port=5432 user=replicator"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "log-level-file=detail",
                     "repo1-host=repository"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'echo \\",
                     "    \"172.17.0.5:*:replication:replicator:jw8s0F4\" \\",
                     "    >> /var/lib/pgsql/.pgpass'"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres chmod 600 /var/lib/pgsql/.pgpass"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --delta --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/recovery.conf"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "# Recovery settings generated by pgBackRest restore on 2020-10-05 14:00:34",
                     "primary_conninfo = 'host=172.17.0.5 port=5432 user=replicator'",
                     "restore_command = 'pgbackrest --stanza=demo archive-get %f \"%p\"'",
                     "standby_mode = 'on'"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/10/data/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "hot_standby" : {
                        "value" : "on"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "hot_standby = on",
                     "log_filename = 'postgresql.log'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "wal_level = replica"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-10.service"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/lib/pgsql/10/data/log/postgresql.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "started streaming WAL from primary"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 6 lines of output]",
                     "LOG:  database system is ready to accept read only connections",
                     "LOG:  restored log file \"000000080000000000000022\" from archive",
                     "LOG:  started streaming WAL from primary at 0/23000000 on timeline 8"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    begin; \\",
                     "    create table stream_table (message text); \\",
                     "    insert into stream_table values ('Important Data'); \\",
                     "    commit; \\",
                     "    select *, current_timestamp from stream_table\";"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |      current_timestamp       ",
                     "----------------+------------------------------",
                     " Important Data | 2020-10-05 14:00:41.24813+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select *, current_timestamp from stream_table\""
                  ],
                  "highlight" : {
                     "filter" : false,
                     "filter-context" : 2,
                     "list" : [
                        "Important Data"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "    message     |       current_timestamp       ",
                     "----------------+-------------------------------",
                     " Important Data | 2020-10-05 14:00:42.320675+00",
                     "(1 row)"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 750 /var/spool/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/spool/pgbackrest"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo mkdir -p -m 750 /var/spool/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo chown postgres:postgres /var/spool/pgbackrest"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "global" : {
                        "archive-async" : {
                           "value" : "y"
                        },
                        "spool-path" : {
                           "value" : "/var/spool/pgbackrest"
                        }
                     },
                     "global:archive-get" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     },
                     "global:archive-push" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "global" : {
                        "archive-async" : {
                           "value" : "y"
                        },
                        "spool-path" : {
                           "value" : "/var/spool/pgbackrest"
                        }
                     },
                     "global:archive-get" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     },
                     "global:archive-push" : {
                        "process-max" : {
                           "value" : "2"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"alter user replicator password 'bogus'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ALTER ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl restart postgresql-10.service"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres rm -f /var/log/pgbackrest/demo-archive-push-async.log"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \" \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal(); \\",
                     "    select pg_create_restore_point('test async push'); select pg_switch_wal();\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --log-level-console=info check"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "WAL segment"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: check command begin 2.30: --log-level-console=info --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --repo1-host=repository --stanza=demo",
                     "P00   INFO: WAL segment 000000080000000000000028 successfully archived to '/var/lib/pgbackrest/archive/demo/10-1/0000000800000000/000000080000000000000028-dd41d99c801e458de05264828248466a85b135d0.gz'",
                     "P00   INFO: check command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/pgbackrest/demo-archive-push-async.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        " WAL file\\(s\\) to archive|pushed WAL file \\'0000000"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/pgsql/10/data/pg_wal] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 1 WAL file(s) to archive: 000000080000000000000023",
                     "P01 DETAIL: pushed WAL file '000000080000000000000023' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully",
                     "",
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/pgsql/10/data/pg_wal] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 4 WAL file(s) to archive: 000000080000000000000024...000000080000000000000027",
                     "P02 DETAIL: pushed WAL file '000000080000000000000025' to the archive",
                     "P01 DETAIL: pushed WAL file '000000080000000000000024' to the archive",
                     "P01 DETAIL: pushed WAL file '000000080000000000000027' to the archive",
                     "P02 DETAIL: pushed WAL file '000000080000000000000026' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully",
                     "",
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-push:async command begin 2.30: [/var/lib/pgsql/10/data/pg_wal] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: push 1 WAL file(s) to archive: 000000080000000000000028",
                     "P01 DETAIL: pushed WAL file '000000080000000000000028' to the archive",
                     "P00   INFO: archive-push:async command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 5"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres cat /var/log/pgbackrest/demo-archive-get-async.log"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "found [0-F]{24} in the archive"
                     ]
                  },
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "-------------------PROCESS START-------------------",
                     "P00   INFO: archive-get:async command begin 2.30: [000000080000000000000021, 000000080000000000000022, 000000080000000000000023, 000000080000000000000024, 000000080000000000000025, 000000080000000000000026, 000000080000000000000027, 000000080000000000000028] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: get 8 WAL file(s) from archive: 000000080000000000000021...000000080000000000000028",
                     "P01 DETAIL: found 000000080000000000000021 in the archive",
                     "P02 DETAIL: found 000000080000000000000022 in the archive",
                     "P01 DETAIL: unable to find 000000080000000000000023 in the archive",
                     "P02 DETAIL: unable to find 000000080000000000000024 in the archive",
                     "       [filtered 20 lines of output]",
                     "P00   INFO: archive-get:async command begin 2.30: [000000080000000000000023, 000000080000000000000024, 000000080000000000000025, 000000080000000000000026, 000000080000000000000027, 000000080000000000000028, 000000080000000000000029, 00000008000000000000002A] --archive-async --log-level-console=off --log-level-file=detail --log-level-stderr=off --no-log-timestamp --pg1-path=/var/lib/pgsql/10/data --process-max=2 --repo1-host=repository --spool-path=/var/spool/pgbackrest --stanza=demo",
                     "P00   INFO: get 8 WAL file(s) from archive: 000000080000000000000023...00000008000000000000002A",
                     "P01 DETAIL: found 000000080000000000000023 in the archive",
                     "P02 DETAIL: found 000000080000000000000024 in the archive",
                     "P01 DETAIL: found 000000080000000000000025 in the archive",
                     "P02 DETAIL: found 000000080000000000000026 in the archive",
                     "P02 DETAIL: found 000000080000000000000028 in the archive",
                     "P01 DETAIL: found 000000080000000000000027 in the archive",
                     "P02 DETAIL: unable to find 000000080000000000000029 in the archive",
                     "P01 DETAIL: unable to find 00000008000000000000002A in the archive",
                     "       [filtered 13 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres psql -c \"alter user replicator password 'jw8s0F4'\""
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "ALTER ROLE"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg2-host" : {
                           "value" : "pg-standby"
                        },
                        "pg2-path" : {
                           "value" : "/var/lib/pgsql/10/data"
                        }
                     },
                     "global" : {
                        "backup-standby" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/10/data",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/pgsql/10/data",
                     "",
                     "[global]",
                     "backup-standby=y",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --log-level-console=detail backup"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "backup file pg-primary|replay on the standby"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 2 lines of output]",
                     "P00   INFO: execute non-exclusive pg_start_backup(): backup begins after the requested immediate checkpoint completes",
                     "P00   INFO: backup start archive = 00000008000000000000002A, lsn = 0/2A000028",
                     "P00   INFO: wait for replay on the standby to reach 0/2A000028",
                     "P00   INFO: replay on the standby reached 0/2A000028",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/10/data/global/pg_control (8KB, 0%) checksum 0b30e8d9795be2d475f81569d3d6a0edd6074836",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/10/data/log/postgresql.log (5.6KB, 0%) checksum 9a94c9368a1ebb4e02ff72958c767952cdfe0838",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/10/data/pg_hba.conf (4.2KB, 0%) checksum 12abee43e7eabfb3ff6239f3fc9bc3598293557d",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/10/data/current_logfiles (26B, 0%) checksum 78a9f5c10960f0d91fcd313937469824861795a2",
                     "P01   INFO: backup file pg-primary:/var/lib/pgsql/10/data/pg_logical/replorigin_checkpoint (8B, 0%) checksum 347fc8f2df71bd4436e38bd1516ccd7ea0d46532",
                     "P02   INFO: backup file pg-standby:/var/lib/pgsql/10/data/base/12953/2608 (440KB, 19%) checksum c143d2126ef4902b0034a3efdcf1a1e2172af099",
                     "P03   INFO: backup file pg-standby:/var/lib/pgsql/10/data/base/12953/1249 (392KB, 36%) checksum 643fe5cb406e4950d3d9f40c7a029449d4b5fa93",
                     "       [filtered 1254 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl stop postgresql-10.service"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres /usr/pgsql-11/bin/initdb \\",
                     "    -D /var/lib/pgsql/11/data -k -A peer"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sh -c 'cd /var/lib/pgsql && \\",
                     "    /usr/pgsql-11/bin/pg_upgrade \\",
                     "    --old-bindir=/usr/pgsql-10/bin \\",
                     "    --new-bindir=/usr/pgsql-11/bin \\",
                     "    --old-datadir=/var/lib/pgsql/10/data \\",
                     "    --new-datadir=/var/lib/pgsql/11/data \\",
                     "    --old-options=\" -c config_file=/var/lib/pgsql/10/data/postgresql.conf\" \\",
                     "    --new-options=\" -c config_file=/var/lib/pgsql/11/data/postgresql.conf\"'"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "Upgrade Complete"
                     ]
                  },
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "       [filtered 68 lines of output]",
                     "Creating script to delete old cluster                       ok",
                     "",
                     "Upgrade Complete",
                     "----------------",
                     "Optimizer statistics are not transferred by pg_upgrade so,",
                     "       [filtered 4 lines of output]"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/11/data/postgresql.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "archive_command" : {
                        "value" : "'pgbackrest --stanza=demo archive-push %p'"
                     },
                     "archive_mode" : {
                        "value" : "on"
                     },
                     "listen_addresses" : {
                        "value" : "'*'"
                     },
                     "log_line_prefix" : {
                        "value" : "''"
                     },
                     "max_wal_senders" : {
                        "value" : "3"
                     },
                     "port" : {
                        "value" : "5432"
                     },
                     "wal_level" : {
                        "value" : "replica"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "archive_command = 'pgbackrest --stanza=demo archive-push %p'",
                     "archive_mode = on",
                     "listen_addresses = '*'",
                     "log_line_prefix = ''",
                     "max_wal_senders = 3",
                     "port = 5432",
                     "wal_level = replica"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-primary",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/11/data"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/11/data",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/11/data"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-path=/var/lib/pgsql/11/data",
                     "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator",
                     "",
                     "[global]",
                     "archive-async=y",
                     "log-level-file=detail",
                     "repo1-host=repository",
                     "spool-path=/var/spool/pgbackrest",
                     "",
                     "[global:archive-get]",
                     "process-max=2",
                     "",
                     "[global:archive-push]",
                     "process-max=2"
                  ]
               }
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "demo" : {
                        "pg1-path" : {
                           "value" : "/var/lib/pgsql/11/data"
                        },
                        "pg2-path" : {
                           "value" : "/var/lib/pgsql/11/data"
                        }
                     },
                     "global" : {
                        "backup-standby" : {
                           "value" : "n"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/11/data",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/pgsql/11/data",
                     "",
                     "[global]",
                     "backup-standby=n",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo cp /var/lib/pgsql/10/data/pg_hba.conf \\",
                     "    /var/lib/pgsql/11/data/pg_hba.conf"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --no-online \\",
                     "    --log-level-console=info stanza-upgrade"
                  ],
                  "highlight" : {
                     "filter" : true,
                     "filter-context" : 2,
                     "list" : [
                        "completed successfully"
                     ]
                  },
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   INFO: stanza-upgrade command begin 2.30: --no-backup-standby --log-level-console=info --log-level-stderr=off --no-log-timestamp --no-online --pg1-host=pg-primary --pg2-host=pg-standby --pg1-path=/var/lib/pgsql/11/data --pg2-path=/var/lib/pgsql/11/data --repo1-path=/var/lib/pgbackrest --stanza=demo",
                     "P00   INFO: stanza-upgrade command end: completed successfully"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-11.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres systemctl status postgresql-11.service"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "● postgresql-11.service - PostgreSQL 11 database server",
                     "   Loaded: loaded (/usr/lib/systemd/system/postgresql-11.service; disabled; vendor preset: disabled)",
                     "   Active: active (running) since Mon 2020-10-05 14:01:23 UTC; 333ms ago",
                     "     Docs: https://www.postgresql.org/docs/11/static/",
                     "  Process: 4079 ExecStartPre=/usr/pgsql-11/bin/postgresql-11-check-db-dir ${PGDATA} (code=exited, status=0/SUCCESS)",
                     " Main PID: 4084 (postmaster)",
                     "   CGroup: /docker/d645d6bc3731344e3715ba1309e0838639d555de6719d11dcfc9333a787a928c/system.slice/postgresql-11.service",
                     "           ├─4084 /usr/pgsql-11/bin/postmaster -D /var/lib/pgsql/11/data/",
                     "           ├─4085 postgres: logger                                       ",
                     "           ├─4087 postgres: checkpointer                                 ",
                     "           ├─4088 postgres: background writer                            ",
                     "           ├─4089 postgres: walwriter                                    ",
                     "           ├─4090 postgres: autovacuum launcher                          ",
                     "           ├─4091 postgres: archiver                                     ",
                     "           ├─4092 postgres: stats collector                              ",
                     "           └─4093 postgres: logical replication launcher                 "
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm -rf /var/lib/pgsql/10/data"
                  ],
                  "host" : "pg-primary",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo rm -rf /var/lib/pgsql/10/data"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres mkdir -p -m 700 /usr/pgsql-11/bin"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo check"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe",
               "value" : {
                  "output" : [
                     "P00   WARN: unable to check pg-2: [DbConnectError] raised from remote-0 protocol on 'pg-standby': unable to connect to 'dbname='postgres' port=5432': could not connect to server: No such file or directory",
                     "            \tIs the server running locally and accepting",
                     "            \tconnections on Unix domain socket \"/var/run/postgresql/.s.PGSQL.5432\"?"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u pgbackrest pgbackrest --stanza=demo --type=full backup"
                  ],
                  "host" : "repository",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo --type=standby restore"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/var/lib/pgsql/11/data/postgresql.conf",
                  "host" : "pg-standby",
                  "option" : {
                     "hot_standby" : {
                        "value" : "on"
                     }
                  }
               },
               "type" : "cfg-postgresql",
               "value" : {
                  "config" : [
                     "hot_standby = on"
                  ]
               }
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo systemctl start postgresql-11.service"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres sleep 2"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : false,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "bash-wrap" : true,
                  "cmd" : [
                     "sudo -u postgres pgbackrest --stanza=demo check"
                  ],
                  "host" : "pg-standby",
                  "load-env" : true,
                  "output" : true,
                  "run-as-user" : null
               },
               "type" : "exe"
            },
            {
               "key" : {
                  "file" : "/etc/pgbackrest/pgbackrest.conf",
                  "host" : "repository",
                  "option" : {
                     "global" : {
                        "backup-standby" : {
                           "value" : "y"
                        }
                     }
                  }
               },
               "type" : "cfg-pgbackrest",
               "value" : {
                  "config" : [
                     "[demo]",
                     "pg1-host=pg-primary",
                     "pg1-path=/var/lib/pgsql/11/data",
                     "pg2-host=pg-standby",
                     "pg2-path=/var/lib/pgsql/11/data",
                     "",
                     "[global]",
                     "backup-standby=y",
                     "process-max=3",
                     "repo1-path=/var/lib/pgbackrest",
                     "repo1-retention-full=2",
                     "start-fast=y"
                  ]
               }
            }
         ]
      }
   }
}
